{
  "contractName": "ElectionStorage",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "contract Election",
          "name": "_contract",
          "type": "address"
        }
      ],
      "name": "addContract",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.0+commit.c7dfd78e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"contract Election\",\"name\":\"_contract\",\"type\":\"address\"}],\"name\":\"addContract\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"project:/contracts/ElectionStorage.sol\":\"ElectionStorage\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"project:/contracts/Election.sol\":{\"keccak256\":\"0xf812e7967375bfcb9a2c2245b4332dd035d444cab93f22826de36548d45c94ec\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://40db735874709768a4d75e1bc863e2cc6123845f0e9db25cd5204199fc42c897\",\"dweb:/ipfs/QmXr13Zx5LS5hY7GsjWd36DYkz1tHbgnN3JpfXRxXCVjvL\"]},\"project:/contracts/ElectionStorage.sol\":{\"keccak256\":\"0xa24ef83e7528bc3c4331f031af02fd99f3ebac0d6ceb69efa715814f74ae9e8c\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://f63e640b631350c6f11175b0cf1cd1fe8f0ceaddf0a8d1389b5d009947670430\",\"dweb:/ipfs/QmRpudpcuccf878gTTZz9oZPqrgQv3s3Rt6oAv8k3jiYnU\"]},\"project:/contracts/ballot/Ballot.sol\":{\"keccak256\":\"0x0ffa7375659b6ba2abbd62def5dbd45ecc9509ac5b675a62fc2b13a9d61c83a7\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://290ef03f1c1879ec2cefc3613e3884deff1ca3601cc9b57d8240ff471011c2a8\",\"dweb:/ipfs/QmUL8Yuc4WEG2sVBXGNXLr8sNfyQEByaxyicPy8qAZV2qd\"]},\"project:/contracts/resultCalculator/ResultCalculator.sol\":{\"keccak256\":\"0xc7e89ccd6bdb74107b0db512f5ca26afb21d8a72161563f03fa001d914705f94\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://94bf2b7e2b6c4aa3313c5e00071a1867aecd16079c03cdc298be48779849670f\",\"dweb:/ipfs/QmPpZhETXesSifdpj8SYKqCKCvAYX3kzavYnhVQRLSq5Tx\"]}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b50610181806100206000396000f3fe608060405234801561001057600080fd5b506004361061002b5760003560e01c80635f539d6914610030575b600080fd5b61004a600480360381019061004591906100c7565b61004c565b005b6000819080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b6000813590506100c181610134565b92915050565b6000602082840312156100d957600080fd5b60006100e7848285016100b2565b91505092915050565b60006100fb82610114565b9050919050565b600061010d826100f0565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b61013d81610102565b811461014857600080fd5b5056fea2646970667358221220b6404c8f984b61ce081072a7c157d1690919ebd999390e504c5a263c8f3784fe64736f6c63430008000033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b506004361061002b5760003560e01c80635f539d6914610030575b600080fd5b61004a600480360381019061004591906100c7565b61004c565b005b6000819080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b6000813590506100c181610134565b92915050565b6000602082840312156100d957600080fd5b60006100e7848285016100b2565b91505092915050565b60006100fb82610114565b9050919050565b600061010d826100f0565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b61013d81610102565b811461014857600080fd5b5056fea2646970667358221220b6404c8f984b61ce081072a7c157d1690919ebd999390e504c5a263c8f3784fe64736f6c63430008000033",
  "immutableReferences": {},
  "generatedSources": [],
  "deployedGeneratedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:993:12",
        "statements": [
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "75:103:12",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "85:29:12",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "107:6:12"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "94:12:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "94:20:12"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "85:5:12"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "166:5:12"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_contract$_Election_$371",
                      "nodeType": "YulIdentifier",
                      "src": "123:42:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "123:49:12"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "123:49:12"
                }
              ]
            },
            "name": "abi_decode_t_contract$_Election_$371",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "53:6:12",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "61:3:12",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "69:5:12",
                "type": ""
              }
            ],
            "src": "7:171:12"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "266:212:12",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "312:16:12",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "321:1:12",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "324:1:12",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "314:6:12"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "314:12:12"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "314:12:12"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "287:7:12"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "296:9:12"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "283:3:12"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "283:23:12"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "308:2:12",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "279:3:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "279:32:12"
                  },
                  "nodeType": "YulIf",
                  "src": "276:2:12"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "338:133:12",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "353:15:12",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "367:1:12",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "357:6:12",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "382:79:12",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "433:9:12"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "444:6:12"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "429:3:12"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "429:22:12"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "453:7:12"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_contract$_Election_$371",
                          "nodeType": "YulIdentifier",
                          "src": "392:36:12"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "392:69:12"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "382:6:12"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_contract$_Election_$371",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "236:9:12",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "247:7:12",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "259:6:12",
                "type": ""
              }
            ],
            "src": "184:294:12"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "529:51:12",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "539:35:12",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "568:5:12"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint160",
                      "nodeType": "YulIdentifier",
                      "src": "550:17:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "550:24:12"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "539:7:12"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "511:5:12",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "521:7:12",
                "type": ""
              }
            ],
            "src": "484:96:12"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "647:51:12",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "657:35:12",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "686:5:12"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_address",
                      "nodeType": "YulIdentifier",
                      "src": "668:17:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "668:24:12"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "657:7:12"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_contract$_Election_$371",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "629:5:12",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "639:7:12",
                "type": ""
              }
            ],
            "src": "586:112:12"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "749:81:12",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "759:65:12",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "774:5:12"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "781:42:12",
                        "type": "",
                        "value": "0xffffffffffffffffffffffffffffffffffffffff"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "770:3:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "770:54:12"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "759:7:12"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_uint160",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "731:5:12",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "741:7:12",
                "type": ""
              }
            ],
            "src": "704:126:12"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "895:95:12",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "968:16:12",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "977:1:12",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "980:1:12",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "970:6:12"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "970:12:12"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "970:12:12"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "918:5:12"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "959:5:12"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_contract$_Election_$371",
                              "nodeType": "YulIdentifier",
                              "src": "925:33:12"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "925:40:12"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "915:2:12"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "915:51:12"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "908:6:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "908:59:12"
                  },
                  "nodeType": "YulIf",
                  "src": "905:2:12"
                }
              ]
            },
            "name": "validator_revert_t_contract$_Election_$371",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "888:5:12",
                "type": ""
              }
            ],
            "src": "836:154:12"
          }
        ]
      },
      "contents": "{\n\n    function abi_decode_t_contract$_Election_$371(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_contract$_Election_$371(value)\n    }\n\n    function abi_decode_tuple_t_contract$_Election_$371(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_contract$_Election_$371(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_contract$_Election_$371(value) -> cleaned {\n        cleaned := cleanup_t_address(value)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function validator_revert_t_contract$_Election_$371(value) {\n        if iszero(eq(value, cleanup_t_contract$_Election_$371(value))) { revert(0, 0) }\n    }\n\n}\n",
      "id": 12,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "sourceMap": "90:274:3:-:0;;;;;;;;;;;;;;;;;;;",
  "deployedSourceMap": "90:274:3:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;274:88;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;330:9;345;330:25;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;274:88;:::o;7:171:12:-;;107:6;94:20;85:29;;123:49;166:5;123:49;:::i;:::-;75:103;;;;:::o;184:294::-;;308:2;296:9;287:7;283:23;279:32;276:2;;;324:1;321;314:12;276:2;367:1;392:69;453:7;444:6;433:9;429:22;392:69;:::i;:::-;382:79;;338:133;266:212;;;;:::o;484:96::-;;550:24;568:5;550:24;:::i;:::-;539:35;;529:51;;;:::o;586:112::-;;668:24;686:5;668:24;:::i;:::-;657:35;;647:51;;;:::o;704:126::-;;781:42;774:5;770:54;759:65;;749:81;;;:::o;836:154::-;925:40;959:5;925:40;:::i;:::-;918:5;915:51;905:2;;980:1;977;970:12;905:2;895:95;:::o",
  "source": "// SPDX-License-Identifier: UNLICENSED\npragma solidity >=0.8.0;\nimport './Election.sol';\n\ncontract ElectionStorage {\n    Election[] contracts;\n    mapping(Election.Status=>Election[]) activeElections;\n    mapping(address=>Election[]) addressToElections;  // change name\n    function addContract(Election _contract)public{\n        contracts.push(_contract);\n    }\n}",
  "sourcePath": "/Users/rajranjan/gitProjects/agora-blockchain/server/contracts/ElectionStorage.sol",
  "ast": {
    "absolutePath": "project:/contracts/ElectionStorage.sol",
    "exportedSymbols": {
      "Ballot": [
        668
      ],
      "Election": [
        371
      ],
      "ElectionStorage": [
        518
      ],
      "ResultCalculator": [
        1116
      ]
    },
    "id": 519,
    "license": "UNLICENSED",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 486,
        "literals": [
          "solidity",
          ">=",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "39:24:3"
      },
      {
        "absolutePath": "project:/contracts/Election.sol",
        "file": "./Election.sol",
        "id": 487,
        "nodeType": "ImportDirective",
        "scope": 519,
        "sourceUnit": 372,
        "src": "64:24:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 518,
        "linearizedBaseContracts": [
          518
        ],
        "name": "ElectionStorage",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 491,
            "mutability": "mutable",
            "name": "contracts",
            "nodeType": "VariableDeclaration",
            "scope": 518,
            "src": "121:20:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_contract$_Election_$371_$dyn_storage",
              "typeString": "contract Election[]"
            },
            "typeName": {
              "baseType": {
                "id": 489,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 488,
                  "name": "Election",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 371,
                  "src": "121:8:3"
                },
                "referencedDeclaration": 371,
                "src": "121:8:3",
                "typeDescriptions": {
                  "typeIdentifier": "t_contract$_Election_$371",
                  "typeString": "contract Election"
                }
              },
              "id": 490,
              "nodeType": "ArrayTypeName",
              "src": "121:10:3",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_contract$_Election_$371_$dyn_storage_ptr",
                "typeString": "contract Election[]"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 498,
            "mutability": "mutable",
            "name": "activeElections",
            "nodeType": "VariableDeclaration",
            "scope": 518,
            "src": "147:52:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_enum$_Status_$69_$_t_array$_t_contract$_Election_$371_$dyn_storage_$",
              "typeString": "mapping(enum Election.Status => contract Election[])"
            },
            "typeName": {
              "id": 497,
              "keyType": {
                "id": 493,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 492,
                  "name": "Election.Status",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 69,
                  "src": "155:15:3"
                },
                "referencedDeclaration": 69,
                "src": "155:15:3",
                "typeDescriptions": {
                  "typeIdentifier": "t_enum$_Status_$69",
                  "typeString": "enum Election.Status"
                }
              },
              "nodeType": "Mapping",
              "src": "147:36:3",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_enum$_Status_$69_$_t_array$_t_contract$_Election_$371_$dyn_storage_$",
                "typeString": "mapping(enum Election.Status => contract Election[])"
              },
              "valueType": {
                "baseType": {
                  "id": 495,
                  "nodeType": "UserDefinedTypeName",
                  "pathNode": {
                    "id": 494,
                    "name": "Election",
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 371,
                    "src": "172:8:3"
                  },
                  "referencedDeclaration": 371,
                  "src": "172:8:3",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_Election_$371",
                    "typeString": "contract Election"
                  }
                },
                "id": 496,
                "nodeType": "ArrayTypeName",
                "src": "172:10:3",
                "typeDescriptions": {
                  "typeIdentifier": "t_array$_t_contract$_Election_$371_$dyn_storage_ptr",
                  "typeString": "contract Election[]"
                }
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 504,
            "mutability": "mutable",
            "name": "addressToElections",
            "nodeType": "VariableDeclaration",
            "scope": 518,
            "src": "205:47:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_contract$_Election_$371_$dyn_storage_$",
              "typeString": "mapping(address => contract Election[])"
            },
            "typeName": {
              "id": 503,
              "keyType": {
                "id": 499,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "213:7:3",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "205:28:3",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_contract$_Election_$371_$dyn_storage_$",
                "typeString": "mapping(address => contract Election[])"
              },
              "valueType": {
                "baseType": {
                  "id": 501,
                  "nodeType": "UserDefinedTypeName",
                  "pathNode": {
                    "id": 500,
                    "name": "Election",
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 371,
                    "src": "222:8:3"
                  },
                  "referencedDeclaration": 371,
                  "src": "222:8:3",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_Election_$371",
                    "typeString": "contract Election"
                  }
                },
                "id": 502,
                "nodeType": "ArrayTypeName",
                "src": "222:10:3",
                "typeDescriptions": {
                  "typeIdentifier": "t_array$_t_contract$_Election_$371_$dyn_storage_ptr",
                  "typeString": "contract Election[]"
                }
              }
            },
            "visibility": "internal"
          },
          {
            "body": {
              "id": 516,
              "nodeType": "Block",
              "src": "320:42:3",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 513,
                        "name": "_contract",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 507,
                        "src": "345:9:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Election_$371",
                          "typeString": "contract Election"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_Election_$371",
                          "typeString": "contract Election"
                        }
                      ],
                      "expression": {
                        "id": 510,
                        "name": "contracts",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 491,
                        "src": "330:9:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_contract$_Election_$371_$dyn_storage",
                          "typeString": "contract Election[] storage ref"
                        }
                      },
                      "id": 512,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "src": "330:14:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_contract$_Election_$371_$returns$__$",
                        "typeString": "function (contract Election)"
                      }
                    },
                    "id": 514,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "330:25:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 515,
                  "nodeType": "ExpressionStatement",
                  "src": "330:25:3"
                }
              ]
            },
            "functionSelector": "5f539d69",
            "id": 517,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "addContract",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 508,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 507,
                  "mutability": "mutable",
                  "name": "_contract",
                  "nodeType": "VariableDeclaration",
                  "scope": 517,
                  "src": "295:18:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_Election_$371",
                    "typeString": "contract Election"
                  },
                  "typeName": {
                    "id": 506,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 505,
                      "name": "Election",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 371,
                      "src": "295:8:3"
                    },
                    "referencedDeclaration": 371,
                    "src": "295:8:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Election_$371",
                      "typeString": "contract Election"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "294:20:3"
            },
            "returnParameters": {
              "id": 509,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "320:0:3"
            },
            "scope": 518,
            "src": "274:88:3",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 519,
        "src": "90:274:3"
      }
    ],
    "src": "39:325:3"
  },
  "legacyAST": {
    "absolutePath": "project:/contracts/ElectionStorage.sol",
    "exportedSymbols": {
      "Ballot": [
        668
      ],
      "Election": [
        371
      ],
      "ElectionStorage": [
        518
      ],
      "ResultCalculator": [
        1116
      ]
    },
    "id": 519,
    "license": "UNLICENSED",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 486,
        "literals": [
          "solidity",
          ">=",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "39:24:3"
      },
      {
        "absolutePath": "project:/contracts/Election.sol",
        "file": "./Election.sol",
        "id": 487,
        "nodeType": "ImportDirective",
        "scope": 519,
        "sourceUnit": 372,
        "src": "64:24:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 518,
        "linearizedBaseContracts": [
          518
        ],
        "name": "ElectionStorage",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 491,
            "mutability": "mutable",
            "name": "contracts",
            "nodeType": "VariableDeclaration",
            "scope": 518,
            "src": "121:20:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_contract$_Election_$371_$dyn_storage",
              "typeString": "contract Election[]"
            },
            "typeName": {
              "baseType": {
                "id": 489,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 488,
                  "name": "Election",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 371,
                  "src": "121:8:3"
                },
                "referencedDeclaration": 371,
                "src": "121:8:3",
                "typeDescriptions": {
                  "typeIdentifier": "t_contract$_Election_$371",
                  "typeString": "contract Election"
                }
              },
              "id": 490,
              "nodeType": "ArrayTypeName",
              "src": "121:10:3",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_contract$_Election_$371_$dyn_storage_ptr",
                "typeString": "contract Election[]"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 498,
            "mutability": "mutable",
            "name": "activeElections",
            "nodeType": "VariableDeclaration",
            "scope": 518,
            "src": "147:52:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_enum$_Status_$69_$_t_array$_t_contract$_Election_$371_$dyn_storage_$",
              "typeString": "mapping(enum Election.Status => contract Election[])"
            },
            "typeName": {
              "id": 497,
              "keyType": {
                "id": 493,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 492,
                  "name": "Election.Status",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 69,
                  "src": "155:15:3"
                },
                "referencedDeclaration": 69,
                "src": "155:15:3",
                "typeDescriptions": {
                  "typeIdentifier": "t_enum$_Status_$69",
                  "typeString": "enum Election.Status"
                }
              },
              "nodeType": "Mapping",
              "src": "147:36:3",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_enum$_Status_$69_$_t_array$_t_contract$_Election_$371_$dyn_storage_$",
                "typeString": "mapping(enum Election.Status => contract Election[])"
              },
              "valueType": {
                "baseType": {
                  "id": 495,
                  "nodeType": "UserDefinedTypeName",
                  "pathNode": {
                    "id": 494,
                    "name": "Election",
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 371,
                    "src": "172:8:3"
                  },
                  "referencedDeclaration": 371,
                  "src": "172:8:3",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_Election_$371",
                    "typeString": "contract Election"
                  }
                },
                "id": 496,
                "nodeType": "ArrayTypeName",
                "src": "172:10:3",
                "typeDescriptions": {
                  "typeIdentifier": "t_array$_t_contract$_Election_$371_$dyn_storage_ptr",
                  "typeString": "contract Election[]"
                }
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 504,
            "mutability": "mutable",
            "name": "addressToElections",
            "nodeType": "VariableDeclaration",
            "scope": 518,
            "src": "205:47:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_contract$_Election_$371_$dyn_storage_$",
              "typeString": "mapping(address => contract Election[])"
            },
            "typeName": {
              "id": 503,
              "keyType": {
                "id": 499,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "213:7:3",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "205:28:3",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_contract$_Election_$371_$dyn_storage_$",
                "typeString": "mapping(address => contract Election[])"
              },
              "valueType": {
                "baseType": {
                  "id": 501,
                  "nodeType": "UserDefinedTypeName",
                  "pathNode": {
                    "id": 500,
                    "name": "Election",
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 371,
                    "src": "222:8:3"
                  },
                  "referencedDeclaration": 371,
                  "src": "222:8:3",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_Election_$371",
                    "typeString": "contract Election"
                  }
                },
                "id": 502,
                "nodeType": "ArrayTypeName",
                "src": "222:10:3",
                "typeDescriptions": {
                  "typeIdentifier": "t_array$_t_contract$_Election_$371_$dyn_storage_ptr",
                  "typeString": "contract Election[]"
                }
              }
            },
            "visibility": "internal"
          },
          {
            "body": {
              "id": 516,
              "nodeType": "Block",
              "src": "320:42:3",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 513,
                        "name": "_contract",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 507,
                        "src": "345:9:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Election_$371",
                          "typeString": "contract Election"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_Election_$371",
                          "typeString": "contract Election"
                        }
                      ],
                      "expression": {
                        "id": 510,
                        "name": "contracts",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 491,
                        "src": "330:9:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_contract$_Election_$371_$dyn_storage",
                          "typeString": "contract Election[] storage ref"
                        }
                      },
                      "id": 512,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "src": "330:14:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_contract$_Election_$371_$returns$__$",
                        "typeString": "function (contract Election)"
                      }
                    },
                    "id": 514,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "330:25:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 515,
                  "nodeType": "ExpressionStatement",
                  "src": "330:25:3"
                }
              ]
            },
            "functionSelector": "5f539d69",
            "id": 517,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "addContract",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 508,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 507,
                  "mutability": "mutable",
                  "name": "_contract",
                  "nodeType": "VariableDeclaration",
                  "scope": 517,
                  "src": "295:18:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_Election_$371",
                    "typeString": "contract Election"
                  },
                  "typeName": {
                    "id": 506,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 505,
                      "name": "Election",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 371,
                      "src": "295:8:3"
                    },
                    "referencedDeclaration": 371,
                    "src": "295:8:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Election_$371",
                      "typeString": "contract Election"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "294:20:3"
            },
            "returnParameters": {
              "id": 509,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "320:0:3"
            },
            "scope": 518,
            "src": "274:88:3",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 519,
        "src": "90:274:3"
      }
    ],
    "src": "39:325:3"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.0+commit.c7dfd78e.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.4.5",
  "updatedAt": "2022-08-22T18:37:34.022Z",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  }
}