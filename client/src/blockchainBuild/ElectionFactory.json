{
  "contractName": "ElectionFactory",
  "abi": [
    {
      "inputs": [],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "electionID",
              "type": "uint256"
            },
            {
              "internalType": "string",
              "name": "name",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "description",
              "type": "string"
            },
            {
              "internalType": "uint256",
              "name": "startDate",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "endDate",
              "type": "uint256"
            }
          ],
          "internalType": "struct Election.ElectionInfo",
          "name": "_electionInfo",
          "type": "tuple"
        },
        {
          "internalType": "uint256",
          "name": "_ballotType",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_resultCalculatorType",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "_electionOrganizer",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_electionOrganizerContract",
          "type": "address"
        }
      ],
      "name": "getElection",
      "outputs": [
        {
          "internalType": "contract Election",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.0+commit.c7dfd78e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"electionID\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"description\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"startDate\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"endDate\",\"type\":\"uint256\"}],\"internalType\":\"struct Election.ElectionInfo\",\"name\":\"_electionInfo\",\"type\":\"tuple\"},{\"internalType\":\"uint256\",\"name\":\"_ballotType\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_resultCalculatorType\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_electionOrganizer\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_electionOrganizerContract\",\"type\":\"address\"}],\"name\":\"getElection\",\"outputs\":[{\"internalType\":\"contract Election\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"project:/contracts/ElectionFactory.sol\":\"ElectionFactory\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"project:/contracts/Election.sol\":{\"keccak256\":\"0x18ec30751728ef1adf65adae0709961c21c8feca8d9e76174d482a5f640a2d54\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://dbebcb758018711e95e4cf1d3be0411e098223e365175c2bfc0007c655554ceb\",\"dweb:/ipfs/QmPTcAj6ZZob8YvCkrnVGyEqdFpLAQAfAg3TADWR6aUZFr\"]},\"project:/contracts/ElectionFactory.sol\":{\"keccak256\":\"0x8ab64061170aea35ca9fe7240608d6b7772419b26f83ab4e60aef6550c70e32c\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://e07396e7c7858d83d57b0db311f91d35ea8414b3a2a172bb8c594387db51d5f6\",\"dweb:/ipfs/QmTeZJ7377QEkgGbQFNs1jj6sXJjpGMau3kjxTpTNHp7K2\"]},\"project:/contracts/ballot/Ballot.sol\":{\"keccak256\":\"0x12eefaab1c98fc22447cd867663e84183cb571e03f9441366d2aaefe263285c9\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://d6d0bd201f29c5e27d15f30dfe086fc9070ba0c6f414d85b2e2f782c3c522c7f\",\"dweb:/ipfs/QmPVYvX3ZZhBaMnbj2Jacgy97QJsYaufN7s8qc8GTykdNM\"]},\"project:/contracts/ballot/BordaBallot.sol\":{\"keccak256\":\"0x9ae4be1d9747f8ae0a52d9d92fd32e00fb2a8b14b07293b4048c6aded54fae36\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://985a96ea05d649fd04549b07aec1a81b846fdb038d61b2a9bde3b5b8b1dfa4d2\",\"dweb:/ipfs/Qma5Mphgnx6cQaTNnXeT6ZUqV8jdmHXfbRHywEoqjnnGNK\"]},\"project:/contracts/ballot/GeneralBallot.sol\":{\"keccak256\":\"0xeba45cabb60f74c07ef81e0597b04e4e7196c6357c32fbb2769d870625904f04\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://45add10e03aeb75e6d8a9f999e192e3a3876e9a0dcaf2ddc4cf4b460f24a16b6\",\"dweb:/ipfs/QmUHGuwuaXxDMzeSULcrkvTh2GF1djX6An4SFhHvjuDYY3\"]},\"project:/contracts/ballot/PreferenceBallot.sol\":{\"keccak256\":\"0xf1c2c0597d4c795aff3f5da7d3905cf862fae7026cc3c1f11952ad3a90b8c3dc\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://875b84894116e0eaba3dd16ad2635e33dead21b7bea3820daa37b297bce5946e\",\"dweb:/ipfs/QmT6HxUv1GbLLFV5cdZdujKDDkgCM7v1cuKkdQgqfAvXE1\"]},\"project:/contracts/resultCalculator/BordaResult.sol\":{\"keccak256\":\"0x3b3fa3c94facf57261e9c41455117df1412d63bfad85557a723e15c43fe8704a\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://9ca7745dfcad841736ca6f03dae09470531c5b66dab81d7809899a841f725fac\",\"dweb:/ipfs/QmNvB1gSAqQFXqN5Dx79nExN53wHDnstH1KUekZUHUmDvY\"]},\"project:/contracts/resultCalculator/GeneralResults.sol\":{\"keccak256\":\"0x92eb6a0fb60a549ea9ea899cf6962b8e1d4a12352ff81c04254fc64dcd80c824\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://547d6062a3d5d3e0c655450022dd7de877858289a56d167cf74d5a6dfdbb6704\",\"dweb:/ipfs/QmP7C6PJySn2C2Zf1isnRQCFFT9crPaPceN34igBLHVXkR\"]},\"project:/contracts/resultCalculator/Oklahoma.sol\":{\"keccak256\":\"0xb15c507710c9dd366f8129e68fbeebaba882f337d74aa6d019f593d737da1c8d\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://5375bf2e6389529628693c6e6145ea9c7c9ac414d0c10476d56e04f9f1efbf0e\",\"dweb:/ipfs/QmeeYaUY1mhnoonLTUtquWsEkYQBqz4CvuVUjXPGPGNGBC\"]},\"project:/contracts/resultCalculator/ResultCalculator.sol\":{\"keccak256\":\"0xc7e89ccd6bdb74107b0db512f5ca26afb21d8a72161563f03fa001d914705f94\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://94bf2b7e2b6c4aa3313c5e00071a1867aecd16079c03cdc298be48779849670f\",\"dweb:/ipfs/QmPpZhETXesSifdpj8SYKqCKCvAYX3kzavYnhVQRLSq5Tx\"]}},\"version\":1}",
  "bytecode": "",
  "deployedBytecode": "0x60806040523480156200001157600080fd5b50600436106200002e5760003560e01c80631140fc191462000033575b600080fd5b6200005160048036038101906200004b91906200087e565b62000069565b60405162000060919062000a9e565b60405180910390f35b6000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614620000fe576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401620000f59062000abb565b60405180910390fd5b60006200010b86620001ab565b50620001188686620003c5565b508660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff16600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1686866040516200016e90620006b5565b6200017e95949392919062000add565b604051809103906000f0801580156200019b573d6000803e3d6000fd5b5090508091505095945050505050565b600060018214156200022857604051620001c590620006c3565b604051809103906000f080158015620001e2573d6000803e3d6000fd5b506000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506200039d565b6002821415620002a3576040516200024090620006d1565b604051809103906000f0801580156200025d573d6000803e3d6000fd5b506000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506200039c565b6003821415620002b3576200039b565b60048214156200032e57604051620002cb90620006df565b604051809103906000f080158015620002e8573d6000803e3d6000fd5b506000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506200039a565b6040516200033c90620006c3565b604051809103906000f08015801562000359573d6000803e3d6000fd5b506000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b5b5b5b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b60006001831415620003e257620003dc826200046c565b62000441565b6002831415620003fd57620003f78262000558565b62000440565b60038314156200041857620004128262000644565b6200043f565b600483141562000432576200042c62000647565b6200043e565b6200043d826200046c565b5b5b5b5b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905092915050565b6001811415620004e8576040516200048490620006ed565b604051809103906000f080158015620004a1573d6000803e3d6000fd5b50600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555062000555565b604051620004f690620006ed565b604051809103906000f08015801562000513573d6000803e3d6000fd5b50600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b50565b6001811415620005d4576040516200057090620006fb565b604051809103906000f0801580156200058d573d6000803e3d6000fd5b50600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555062000641565b604051620005e290620006fb565b604051809103906000f080158015620005ff573d6000803e3d6000fd5b50600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b50565b50565b604051620006559062000709565b604051809103906000f08015801562000672573d6000803e3d6000fd5b50600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b612b878062000d4583390190565b61095d80620038cc83390190565b610d5b806200422983390190565b610c018062004f8483390190565b610a5d8062005b8583390190565b610add80620065e283390190565b610d8180620070bf83390190565b60006200072e620007288462000b75565b62000b41565b9050828152602081018484840111156200074757600080fd5b6200075484828562000c8b565b509392505050565b6000813590506200076d8162000d10565b92915050565b600082601f8301126200078557600080fd5b81356200079784826020860162000717565b91505092915050565b600060a08284031215620007b357600080fd5b620007bf60a062000b41565b90506000620007d18482850162000867565b600083015250602082013567ffffffffffffffff811115620007f257600080fd5b620008008482850162000773565b602083015250604082013567ffffffffffffffff8111156200082157600080fd5b6200082f8482850162000773565b6040830152506060620008458482850162000867565b60608301525060806200085b8482850162000867565b60808301525092915050565b600081359050620008788162000d2a565b92915050565b600080600080600060a086880312156200089757600080fd5b600086013567ffffffffffffffff811115620008b257600080fd5b620008c088828901620007a0565b9550506020620008d38882890162000867565b9450506040620008e68882890162000867565b9350506060620008f9888289016200075c565b92505060806200090c888289016200075c565b9150509295509295909350565b620009248162000bd5565b82525050565b620009358162000c13565b82525050565b620009468162000c3b565b82525050565b620009578162000c63565b82525050565b60006200096a8262000ba8565b62000976818562000bb3565b93506200098881856020860162000c9a565b620009938162000cff565b840191505092915050565b6000620009ad60338362000bc4565b91507f4d7573742062652063616c6c65642066726f6d2074686520656c656374696f6e60008301527f206f7267616e697a657220636f6e7472616374000000000000000000000000006020830152604082019050919050565b600060a08301600083015162000a20600086018262000a8d565b506020830151848203602086015262000a3a82826200095d565b9150506040830151848203604086015262000a5682826200095d565b915050606083015162000a6d606086018262000a8d565b50608083015162000a82608086018262000a8d565b508091505092915050565b62000a988162000c09565b82525050565b600060208201905062000ab560008301846200093b565b92915050565b6000602082019050818103600083015262000ad6816200099e565b9050919050565b600060a082019050818103600083015262000af9818862000a06565b905062000b0a60208301876200092a565b62000b1960408301866200094c565b62000b28606083018562000919565b62000b37608083018462000919565b9695505050505050565b6000604051905081810181811067ffffffffffffffff8211171562000b6b5762000b6a62000cd0565b5b8060405250919050565b600067ffffffffffffffff82111562000b935762000b9262000cd0565b5b601f19601f8301169050602081019050919050565b600081519050919050565b600082825260208201905092915050565b600082825260208201905092915050565b600062000be28262000be9565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600062000c208262000c27565b9050919050565b600062000c348262000be9565b9050919050565b600062000c488262000c4f565b9050919050565b600062000c5c8262000be9565b9050919050565b600062000c708262000c77565b9050919050565b600062000c848262000be9565b9050919050565b82818337600083830152505050565b60005b8381101562000cba57808201518184015260208101905062000c9d565b8381111562000cca576000848401525b50505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6000601f19601f8301169050919050565b62000d1b8162000bd5565b811462000d2757600080fd5b50565b62000d358162000c09565b811462000d4157600080fd5b5056fe60806040523480156200001157600080fd5b5060405162002b8738038062002b87833981810160405281019062000037919062000418565b81600960006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080600a60006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508460008082015181600001556020820151816001019080519060200190620000e3929190620001d3565b50604082015181600201908051906020019062000102929190620001d3565b50606082015181600301556080820151816004015590505083600c60016101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555082600d60006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506103e86008819055506000600b819055506000600c60006101000a81548160ff0219169083151502179055505050505050620006b2565b828054620001e190620005b6565b90600052602060002090601f01602090048101928262000205576000855562000251565b82601f106200022057805160ff191683800117855562000251565b8280016001018555821562000251579182015b828111156200025057825182559160200191906001019062000233565b5b50905062000260919062000264565b5090565b5b808211156200027f57600081600090555060010162000265565b5090565b60006200029a6200029484620004e7565b620004b3565b905082815260208101848484011115620002b357600080fd5b620002c084828562000580565b509392505050565b600081519050620002d9816200064a565b92915050565b600081519050620002f08162000664565b92915050565b60008151905062000307816200067e565b92915050565b600082601f8301126200031f57600080fd5b81516200033184826020860162000283565b91505092915050565b600060a082840312156200034d57600080fd5b6200035960a0620004b3565b905060006200036b8482850162000401565b600083015250602082015167ffffffffffffffff8111156200038c57600080fd5b6200039a848285016200030d565b602083015250604082015167ffffffffffffffff811115620003bb57600080fd5b620003c9848285016200030d565b6040830152506060620003df8482850162000401565b6060830152506080620003f58482850162000401565b60808301525092915050565b600081519050620004128162000698565b92915050565b600080600080600060a086880312156200043157600080fd5b600086015167ffffffffffffffff8111156200044c57600080fd5b6200045a888289016200033a565b95505060206200046d88828901620002df565b94505060406200048088828901620002f6565b93505060606200049388828901620002c8565b9250506080620004a688828901620002c8565b9150509295509295909350565b6000604051905081810181811067ffffffffffffffff82111715620004dd57620004dc6200061b565b5b8060405250919050565b600067ffffffffffffffff8211156200050557620005046200061b565b5b601f19601f8301169050602081019050919050565b6000620005278262000556565b9050919050565b60006200053b826200051a565b9050919050565b60006200054f826200051a565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b60005b83811015620005a057808201518184015260208101905062000583565b83811115620005b0576000848401525b50505050565b60006002820490506001821680620005cf57607f821691505b60208210811415620005e657620005e5620005ec565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b62000655816200051a565b81146200066157600080fd5b50565b6200066f816200052e565b81146200067b57600080fd5b50565b620006898162000542565b81146200069557600080fd5b50565b620006a38162000576565b8114620006af57600080fd5b50565b6124c580620006c26000396000f3fe608060405234801561001057600080fd5b50600436106100ea5760003560e01c8063822023961161008c578063a1818ac411610066578063a1818ac41461023d578063de29278914610259578063df15c37e14610277578063e04b1c0c14610295576100ea565b806382202396146101d157806386852dca146102015780639baec8b91461021f576100ea565b806330a56347116100c857806330a563471461014757806337349a7d146101655780634e69d56014610183578063521b0dcc146101a1576100ea565b806306a49fce146100ef57806311174a291461010d578063273ffe861461012b575b600080fd5b6100f76102b3565b6040516101049190611e2f565b60405180910390f35b610115610440565b6040516101229190611ff8565b60405180910390f35b610145600480360381019061014091906116a0565b61044a565b005b61014f61078c565b60405161015c9190611ff8565b60405180910390f35b61016d610796565b60405161017a9190611d4c565b60405180910390f35b61018b610850565b6040516101989190611ed9565b60405180910390f35b6101bb60048036038101906101b69190611592565b610885565b6040516101c89190611e95565b60405180910390f35b6101eb60048036038101906101e691906116e1565b610939565b6040516101f89190611fb4565b60405180910390f35b610209610a94565b6040516102169190611fd6565b60405180910390f35b610227610bf0565b6040516102349190611d4c565b60405180910390f35b610257600480360381019061025291906115bb565b610caa565b005b610261610e84565b60405161026e9190611e51565b60405180910390f35b61027f611102565b60405161028c9190611e51565b60405180910390f35b61029d6111b0565b6040516102aa9190611d4c565b60405180910390f35b60606005805480602002602001604051908101604052809291908181526020016000905b82821015610437578382906000526020600020906003020160405180606001604052908160008201548152602001600182018054610314906122b4565b80601f0160208091040260200160405190810160405280929190818152602001828054610340906122b4565b801561038d5780601f106103625761010080835404028352916020019161038d565b820191906000526020600020905b81548152906001019060200180831161037057829003601f168201915b505050505081526020016002820180546103a6906122b4565b80601f01602080910402602001604051908101604052809291908181526020018280546103d2906122b4565b801561041f5780601f106103f45761010080835404028352916020019161041f565b820191906000526020600020905b81548152906001019060200180831161040257829003601f168201915b505050505081525050815260200190600101906102d7565b50505050905090565b6000600b54905090565b600a60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146104da576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104d190611f34565b60405180910390fd5b60016002811115610514577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b61051c610850565b6002811115610554577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b14610594576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161058b90611f94565b60405180910390fd5b600060016008546105a59190612181565b90508082600001818152505060058290806001815401808255809150506001900390600052602060002090600302016000909190919091506000820151816000015560208201518160010190805190602001906106039291906111da565b5060408201518160020190805190602001906106209291906111da565b505050600c60019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663e844d09783600001516040518263ffffffff1660e01b81526004016106829190611ff8565b600060405180830381600087803b15801561069c57600080fd5b505af11580156106b0573d6000803e3d6000fd5b505050508160076000846000015181526020019081526020016000206000820151816000015560208201518160010190805190602001906106f29291906111da565b50604082015181600201908051906020019061070f9291906111da565b509050506008600081548092919061072690612300565b91905055507f4d9dd414a40890e16b7bd0ea98bdf9d5b55c3d20cfe4b18febda0d60fb32a60c30600c60019054906101000a900473ffffffffffffffffffffffffffffffffffffffff168460405161078093929190611d67565b60405180910390a15050565b6000600854905090565b6000600960009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610828576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161081f90611f14565b60405180910390fd5b600d60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b600080600301544210156108675760019050610882565b60006004015442101561087d5760009050610882565b600290505b90565b6000600c60019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663521b0dcc836040518263ffffffff1660e01b81526004016108e29190611d4c565b60206040518083038186803b1580156108fa57600080fd5b505afa15801561090e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109329190611677565b9050919050565b610941611260565b6007600083815260200190815260200160002060405180606001604052908160008201548152602001600182018054610979906122b4565b80601f01602080910402602001604051908101604052809291908181526020018280546109a5906122b4565b80156109f25780601f106109c7576101008083540402835291602001916109f2565b820191906000526020600020905b8154815290600101906020018083116109d557829003601f168201915b50505050508152602001600282018054610a0b906122b4565b80601f0160208091040260200160405190810160405280929190818152602001828054610a37906122b4565b8015610a845780601f10610a5957610100808354040283529160200191610a84565b820191906000526020600020905b815481529060010190602001808311610a6757829003601f168201915b5050505050815250509050919050565b610a9c611281565b60006040518060a001604052908160008201548152602001600182018054610ac3906122b4565b80601f0160208091040260200160405190810160405280929190818152602001828054610aef906122b4565b8015610b3c5780601f10610b1157610100808354040283529160200191610b3c565b820191906000526020600020905b815481529060010190602001808311610b1f57829003601f168201915b50505050508152602001600282018054610b55906122b4565b80601f0160208091040260200160405190810160405280929190818152602001828054610b81906122b4565b8015610bce5780601f10610ba357610100808354040283529160200191610bce565b820191906000526020600020905b815481529060010190602001808311610bb157829003601f168201915b5050505050815260200160038201548152602001600482015481525050905090565b6000600960009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610c82576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c7990611f14565b60405180910390fd5b600c60019054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60006002811115610ce4577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b610cec610850565b6002811115610d24577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b14610d64576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d5b90611f54565b60405180910390fd5b600c60019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a1818ac4858585856040518563ffffffff1660e01b8152600401610dc59493929190611de3565b600060405180830381600087803b158015610ddf57600080fd5b505af1158015610df3573d6000803e3d6000fd5b50505050600b6000815480929190610e0a90612300565b91905055507fd589db416dab4dff131e94610b2d02ce215ded85a2943a2ea59acd2153a85182600c60019054906101000a900473ffffffffffffffffffffffffffffffffffffffff166007600086815260200190815260200160002084604051610e7693929190611da5565b60405180910390a150505050565b6060600280811115610ebf577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b610ec7610850565b6002811115610eff577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b14610f3f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f3690611f74565b60405180910390fd5b60001515600c60009054906101000a900460ff16151514156110f457600d60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663c8344a20600c60019054906101000a900473ffffffffffffffffffffffffffffffffffffffff16600b546040518363ffffffff1660e01b8152600401610fdc929190611eb0565b600060405180830381600087803b158015610ff657600080fd5b505af115801561100a573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f820116820180604052508101906110339190611636565b600690805190602001906110489291906112b0565b506001600c60006101000a81548160ff0219169083151502179055507f28e5f582afeee46fd13ea548ad814f45b1d4a5159990336d5e66deb48a960e4c60066040516110949190611e73565b60405180910390a160068054806020026020016040519081016040528092919081815260200182805480156110e857602002820191906000526020600020905b8154815260200190600101908083116110d4575b505050505090506110ff565b6110fc611102565b90505b90565b606060011515600c60009054906101000a900460ff1615151461115a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161115190611ef4565b60405180910390fd5b60068054806020026020016040519081016040528092919081815260200182805480156111a657602002820191906000526020600020905b815481526020019060010190808311611192575b5050505050905090565b6000600960009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b8280546111e6906122b4565b90600052602060002090601f016020900481019282611208576000855561124f565b82601f1061122157805160ff191683800117855561124f565b8280016001018555821561124f579182015b8281111561124e578251825591602001919060010190611233565b5b50905061125c91906112fd565b5090565b60405180606001604052806000815260200160608152602001606081525090565b6040518060a0016040528060008152602001606081526020016060815260200160008152602001600081525090565b8280548282559060005260206000209081019282156112ec579160200282015b828111156112eb5782518255916020019190600101906112d0565b5b5090506112f991906112fd565b5090565b5b808211156113165760008160009055506001016112fe565b5090565b600061132d61132884612044565b612013565b9050808382526020820190508285602086028201111561134c57600080fd5b60005b8581101561137c57816113628882611568565b84526020840193506020830192505060018101905061134f565b5050509392505050565b600061139961139484612044565b612013565b905080838252602082019050828560208602820111156113b857600080fd5b60005b858110156113e857816113ce888261157d565b8452602084019350602083019250506001810190506113bb565b5050509392505050565b600061140561140084612070565b612013565b90508281526020810184848401111561141d57600080fd5b611428848285612272565b509392505050565b60008135905061143f8161244a565b92915050565b600082601f83011261145657600080fd5b813561146684826020860161131a565b91505092915050565b600082601f83011261148057600080fd5b8151611490848260208601611386565b91505092915050565b6000815190506114a881612461565b92915050565b600082601f8301126114bf57600080fd5b81356114cf8482602086016113f2565b91505092915050565b6000606082840312156114ea57600080fd5b6114f46060612013565b9050600061150484828501611568565b600083015250602082013567ffffffffffffffff81111561152457600080fd5b611530848285016114ae565b602083015250604082013567ffffffffffffffff81111561155057600080fd5b61155c848285016114ae565b60408301525092915050565b60008135905061157781612478565b92915050565b60008151905061158c81612478565b92915050565b6000602082840312156115a457600080fd5b60006115b284828501611430565b91505092915050565b600080600080608085870312156115d157600080fd5b60006115df87828801611430565b94505060206115f087828801611568565b935050604061160187828801611568565b925050606085013567ffffffffffffffff81111561161e57600080fd5b61162a87828801611445565b91505092959194509250565b60006020828403121561164857600080fd5b600082015167ffffffffffffffff81111561166257600080fd5b61166e8482850161146f565b91505092915050565b60006020828403121561168957600080fd5b600061169784828501611499565b91505092915050565b6000602082840312156116b257600080fd5b600082013567ffffffffffffffff8111156116cc57600080fd5b6116d8848285016114d8565b91505092915050565b6000602082840312156116f357600080fd5b600061170184828501611568565b91505092915050565b60006117168383611ba1565b905092915050565b600061172a8383611d2e565b60208301905092915050565b61173f816121e1565b82525050565b6000611750826120ea565b61175a818561213d565b93508360208202850161176c856120a0565b8060005b858110156117a85784840389528151611789858261170a565b945061179483612116565b925060208a01995050600181019050611770565b50829750879550505050505092915050565b60006117c5826120f5565b6117cf818561214e565b93506117da836120b0565b8060005b8381101561180b5781516117f2888261171e565b97506117fd83612123565b9250506001810190506117de565b5085935050505092915050565b600061182382612100565b61182d818561214e565b9350611838836120c0565b8060005b838110156118705761184d82612405565b611857888261171e565b975061186283612130565b92505060018101905061183c565b5085935050505092915050565b611886816121f3565b82525050565b6118958161223c565b82525050565b6118a481612260565b82525050565b60006118b58261210b565b6118bf818561215f565b93506118cf818560208601612281565b6118d881612418565b840191505092915050565b600081546118f0816122b4565b6118fa818661215f565b9450600182166000811461191557600181146119275761195a565b60ff198316865260208601935061195a565b611930856120d5565b60005b8381101561195257815481890152600182019150602081019050611933565b808801955050505b50505092915050565b6000611970601b83612170565b91507f526573756c7473206172656e2774206465636c617265642079657400000000006000830152602082019050919050565b60006119b0602583612170565b91507f43616c6c6572206d7573742062652074686520656c656374696f6e206f72676160008301527f6e697a65720000000000000000000000000000000000000000000000000000006020830152604082019050919050565b6000611a16603383612170565b91507f4d7573742062652063616c6c65642066726f6d2074686520656c656374696f6e60008301527f206f7267616e697a657220636f6e7472616374000000000000000000000000006020830152604082019050919050565b6000611a7c602383612170565b91507f456c656374696f6e206e6565647320746f2062652061637469766520746f207660008301527f6f746500000000000000000000000000000000000000000000000000000000006020830152604082019050919050565b6000611ae2603183612170565b91507f526573756c747320617265206465636c61726564206f6e6c792061667465722060008301527f74686520656c656374696f6e20656e64730000000000000000000000000000006020830152604082019050919050565b6000611b48603083612170565b91507f43616e6e6f74206164642063616e6469646174657320616674657220656c656360008301527f74696f6e206861732073746172746564000000000000000000000000000000006020830152604082019050919050565b6000606083016000830151611bb96000860182611d2e565b5060208301518482036020860152611bd182826118aa565b91505060408301518482036040860152611beb82826118aa565b9150508091505092915050565b6000606083016000830151611c106000860182611d2e565b5060208301518482036020860152611c2882826118aa565b91505060408301518482036040860152611c4282826118aa565b9150508091505092915050565b6000606083016000808401549050611c66816122e6565b611c736000870182611d2e565b50600184018583036020870152611c8a83826118e3565b925050600284018583036040870152611ca383826118e3565b925050819250505092915050565b600060a083016000830151611cc96000860182611d2e565b5060208301518482036020860152611ce182826118aa565b91505060408301518482036040860152611cfb82826118aa565b9150506060830151611d106060860182611d2e565b506080830151611d236080860182611d2e565b508091505092915050565b611d3781612232565b82525050565b611d4681612232565b82525050565b6000602082019050611d616000830184611736565b92915050565b6000606082019050611d7c6000830186611736565b611d896020830185611736565b8181036040830152611d9b8184611bf8565b9050949350505050565b6000606082019050611dba6000830186611736565b8181036020830152611dcc8185611c4f565b9050611ddb6040830184611d3d565b949350505050565b6000608082019050611df86000830187611736565b611e056020830186611d3d565b611e126040830185611d3d565b8181036060830152611e2481846117ba565b905095945050505050565b60006020820190508181036000830152611e498184611745565b905092915050565b60006020820190508181036000830152611e6b81846117ba565b905092915050565b60006020820190508181036000830152611e8d8184611818565b905092915050565b6000602082019050611eaa600083018461187d565b92915050565b6000604082019050611ec5600083018561188c565b611ed26020830184611d3d565b9392505050565b6000602082019050611eee600083018461189b565b92915050565b60006020820190508181036000830152611f0d81611963565b9050919050565b60006020820190508181036000830152611f2d816119a3565b9050919050565b60006020820190508181036000830152611f4d81611a09565b9050919050565b60006020820190508181036000830152611f6d81611a6f565b9050919050565b60006020820190508181036000830152611f8d81611ad5565b9050919050565b60006020820190508181036000830152611fad81611b3b565b9050919050565b60006020820190508181036000830152611fce8184611bf8565b905092915050565b60006020820190508181036000830152611ff08184611cb1565b905092915050565b600060208201905061200d6000830184611d3d565b92915050565b6000604051905081810181811067ffffffffffffffff8211171561203a576120396123d6565b5b8060405250919050565b600067ffffffffffffffff82111561205f5761205e6123d6565b5b602082029050602081019050919050565b600067ffffffffffffffff82111561208b5761208a6123d6565b5b601f19601f8301169050602081019050919050565b6000819050602082019050919050565b6000819050602082019050919050565b60008190508160005260206000209050919050565b60008190508160005260206000209050919050565b600081519050919050565b600081519050919050565b600081549050919050565b600081519050919050565b6000602082019050919050565b6000602082019050919050565b6000600182019050919050565b600082825260208201905092915050565b600082825260208201905092915050565b600082825260208201905092915050565b600082825260208201905092915050565b600061218c82612232565b915061219783612232565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff038211156121cc576121cb612349565b5b828201905092915050565b6000819050919050565b60006121ec82612212565b9050919050565b60008115159050919050565b600081905061220d82612436565b919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b60006122478261224e565b9050919050565b600061225982612212565b9050919050565b600061226b826121ff565b9050919050565b82818337600083830152505050565b60005b8381101561229f578082015181840152602081019050612284565b838111156122ae576000848401525b50505050565b600060028204905060018216806122cc57607f821691505b602082108114156122e0576122df6123a7565b5b50919050565b60006122f96122f483612429565b6121d7565b9050919050565b600061230b82612232565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82141561233e5761233d612349565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600061241182546122e6565b9050919050565b6000601f19601f8301169050919050565b60008160001c9050919050565b6003811061244757612446612378565b5b50565b612453816121e1565b811461245e57600080fd5b50565b61246a816121f3565b811461247557600080fd5b50565b61248181612232565b811461248c57600080fd5b5056fea2646970667358221220e8fe9b894e5d3231ab48bd65ad61b370689c15b24305a62973190101a0eee17d64736f6c63430008000033608060405234801561001057600080fd5b5061093d806100206000396000f3fe608060405234801561001057600080fd5b506004361061007d5760003560e01c8063a1818ac41161005b578063a1818ac414610100578063afa524081461011c578063de2e19a01461013a578063e844d0971461016a5761007d565b806306a49fce14610082578063521b0dcc146100a05780635df81330146100d0575b600080fd5b61008a610186565b60405161009791906106a5565b60405180910390f35b6100ba60048036038101906100b591906103f0565b6101de565b6040516100c791906106c7565b60405180910390f35b6100ea60048036038101906100e59190610494565b610234565b6040516100f791906106e2565b60405180910390f35b61011a60048036038101906101159190610419565b61024c565b005b6101246102d8565b6040516101319190610683565b60405180910390f35b610154600480360381019061014f91906104bd565b6102e2565b60405161016191906106e2565b60405180910390f35b610184600480360381019061017f9190610494565b610304565b005b606060008054806020026020016040519081016040528092919081815260200182805480156101d457602002820191906000526020600020905b8154815260200190600101908083116101c0575b5050505050905090565b6000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff169050919050565b60026020528060005260406000206000915090505481565b60019150600160026000858152602001908152602001600020600082825461027491906107dd565b9250508190555060018060008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff02191690831515021790555050505050565b6060808091505090565b6000600191506002600084815260200190815260200160002054905092915050565b600081908060018154018082558091505060019003906000526020600020016000909190919091505550565b600061034361033e8461072e565b6106fd565b9050808382526020820190508285602086028201111561036257600080fd5b60005b85811015610392578161037888826103db565b845260208401935060208301925050600181019050610365565b5050509392505050565b6000813590506103ab816108d9565b92915050565b600082601f8301126103c257600080fd5b81356103d2848260208601610330565b91505092915050565b6000813590506103ea816108f0565b92915050565b60006020828403121561040257600080fd5b60006104108482850161039c565b91505092915050565b6000806000806080858703121561042f57600080fd5b600061043d8782880161039c565b945050602061044e878288016103db565b935050604061045f878288016103db565b925050606085013567ffffffffffffffff81111561047c57600080fd5b610488878288016103b1565b91505092959194509250565b6000602082840312156104a657600080fd5b60006104b4848285016103db565b91505092915050565b600080604083850312156104d057600080fd5b60006104de858286016103db565b92505060206104ef858286016103db565b9150509250929050565b6000610505838361059a565b905092915050565b60006105198383610665565b60208301905092915050565b60006105308261077a565b61053a81856107aa565b93508360208202850161054c8561075a565b8060005b85811015610588578484038952815161056985826104f9565b945061057483610790565b925060208a01995050600181019050610550565b50829750879550505050505092915050565b60006105a582610785565b6105af81856107bb565b93506105ba8361076a565b8060005b838110156105eb5781516105d2888261050d565b97506105dd8361079d565b9250506001810190506105be565b5085935050505092915050565b600061060382610785565b61060d81856107cc565b93506106188361076a565b8060005b83811015610649578151610630888261050d565b975061063b8361079d565b92505060018101905061061c565b5085935050505092915050565b61065f81610845565b82525050565b61066e81610871565b82525050565b61067d81610871565b82525050565b6000602082019050818103600083015261069d8184610525565b905092915050565b600060208201905081810360008301526106bf81846105f8565b905092915050565b60006020820190506106dc6000830184610656565b92915050565b60006020820190506106f76000830184610674565b92915050565b6000604051905081810181811067ffffffffffffffff82111715610724576107236108aa565b5b8060405250919050565b600067ffffffffffffffff821115610749576107486108aa565b5b602082029050602081019050919050565b6000819050602082019050919050565b6000819050602082019050919050565b600081519050919050565b600081519050919050565b6000602082019050919050565b6000602082019050919050565b600082825260208201905092915050565b600082825260208201905092915050565b600082825260208201905092915050565b60006107e882610871565b91506107f383610871565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff038211156108285761082761087b565b5b828201905092915050565b600061083e82610851565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6108e281610833565b81146108ed57600080fd5b50565b6108f981610871565b811461090457600080fd5b5056fea2646970667358221220307a7a8c27c392f29fc94434909bb587642ebef00ed5ca93e80d826e8766b69664736f6c63430008000033608060405234801561001057600080fd5b50610d3b806100206000396000f3fe608060405234801561001057600080fd5b50600436106100625760003560e01c806306a49fce14610067578063521b0dcc14610085578063a1818ac4146100b5578063afa52408146100d1578063de2e19a0146100ef578063e844d0971461011f575b600080fd5b61006f61013b565b60405161007c9190610a32565b60405180910390f35b61009f600480360381019061009a9190610671565b610193565b6040516100ac9190610a54565b60405180910390f35b6100cf60048036038101906100ca919061069a565b6101e9565b005b6100d961054c565b6040516100e69190610a10565b60405180910390f35b6101096004803603810190610104919061073e565b610556565b6040516101169190610acf565b60405180910390f35b61013960048036038101906101349190610715565b610585565b005b6060600080548060200260200160405190810160405280929190818152602001828054801561018957602002820191906000526020600020905b815481526020019060010190808311610175575b5050505050905090565b6000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff169050919050565b60001515600160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff1615151461027c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161027390610aaf565b60405180910390fd5b60001515600360008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600085815260200190815260200160002060009054906101000a900460ff16151514610320576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161031790610a6f565b60405180910390fd5b600080549050600460008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054106103a6576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161039d90610a8f565b60405180910390fd5b600160026000848152602001908152602001600020600085815260200190815260200160002060008282546103db9190610bdb565b925050819055506001600460008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546104329190610bdb565b925050819055506001600360008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600085815260200190815260200160002060006101000a81548160ff021916908315150217905550600080549050600460008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205414156105465760018060008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055505b50505050565b6060808091505090565b600060026000838152602001908152602001600020600084815260200190815260200160002054905092915050565b600081908060018154018082558091505060019003906000526020600020016000909190919091505550565b60006105c46105bf84610b1b565b610aea565b905080838252602082019050828560208602820111156105e357600080fd5b60005b8581101561061357816105f9888261065c565b8452602084019350602083019250506001810190506105e6565b5050509392505050565b60008135905061062c81610cd7565b92915050565b600082601f83011261064357600080fd5b81356106538482602086016105b1565b91505092915050565b60008135905061066b81610cee565b92915050565b60006020828403121561068357600080fd5b60006106918482850161061d565b91505092915050565b600080600080608085870312156106b057600080fd5b60006106be8782880161061d565b94505060206106cf8782880161065c565b93505060406106e08782880161065c565b925050606085013567ffffffffffffffff8111156106fd57600080fd5b61070987828801610632565b91505092959194509250565b60006020828403121561072757600080fd5b60006107358482850161065c565b91505092915050565b6000806040838503121561075157600080fd5b600061075f8582860161065c565b92505060206107708582860161065c565b9150509250929050565b6000610786838361081b565b905092915050565b600061079a83836109f2565b60208301905092915050565b60006107b182610b67565b6107bb8185610b97565b9350836020820285016107cd85610b47565b8060005b8581101561080957848403895281516107ea858261077a565b94506107f583610b7d565b925060208a019950506001810190506107d1565b50829750879550505050505092915050565b600061082682610b72565b6108308185610ba8565b935061083b83610b57565b8060005b8381101561086c578151610853888261078e565b975061085e83610b8a565b92505060018101905061083f565b5085935050505092915050565b600061088482610b72565b61088e8185610bb9565b935061089983610b57565b8060005b838110156108ca5781516108b1888261078e565b97506108bc83610b8a565b92505060018101905061089d565b5085935050505092915050565b6108e081610c43565b82525050565b60006108f3602683610bca565b91507f566f74657220616c726561647920766f74656420666f7220746869732063616e60008301527f64696461746500000000000000000000000000000000000000000000000000006020830152604082019050919050565b6000610959602183610bca565b91507f4d617820766f74657320616c72656164792063617374656420627920766f746560008301527f72000000000000000000000000000000000000000000000000000000000000006020830152604082019050919050565b60006109bf601383610bca565b91507f566f74657220616c726561647920766f746564000000000000000000000000006000830152602082019050919050565b6109fb81610c6f565b82525050565b610a0a81610c6f565b82525050565b60006020820190508181036000830152610a2a81846107a6565b905092915050565b60006020820190508181036000830152610a4c8184610879565b905092915050565b6000602082019050610a6960008301846108d7565b92915050565b60006020820190508181036000830152610a88816108e6565b9050919050565b60006020820190508181036000830152610aa88161094c565b9050919050565b60006020820190508181036000830152610ac8816109b2565b9050919050565b6000602082019050610ae46000830184610a01565b92915050565b6000604051905081810181811067ffffffffffffffff82111715610b1157610b10610ca8565b5b8060405250919050565b600067ffffffffffffffff821115610b3657610b35610ca8565b5b602082029050602081019050919050565b6000819050602082019050919050565b6000819050602082019050919050565b600081519050919050565b600081519050919050565b6000602082019050919050565b6000602082019050919050565b600082825260208201905092915050565b600082825260208201905092915050565b600082825260208201905092915050565b600082825260208201905092915050565b6000610be682610c6f565b9150610bf183610c6f565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115610c2657610c25610c79565b5b828201905092915050565b6000610c3c82610c4f565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b610ce081610c31565b8114610ceb57600080fd5b50565b610cf781610c6f565b8114610d0257600080fd5b5056fea2646970667358221220388ce702ec6f6582ad41fd8cdcc4bb1a2e78b98ad454730f3a75fe264f9f41d664736f6c63430008000033608060405234801561001057600080fd5b50610be1806100206000396000f3fe608060405234801561001057600080fd5b50600436106100625760003560e01c806306a49fce14610067578063521b0dcc14610085578063a1818ac4146100b5578063afa52408146100d1578063de2e19a0146100ef578063e844d0971461011f575b600080fd5b61006f61013b565b60405161007c9190610918565b60405180910390f35b61009f600480360381019061009a9190610623565b610193565b6040516100ac919061093a565b60405180910390f35b6100cf60048036038101906100ca919061064c565b6101e9565b005b6100d9610422565b6040516100e691906108f6565b60405180910390f35b610109600480360381019061010491906106f0565b6104c1565b6040516101169190610975565b60405180910390f35b610139600480360381019061013491906106c7565b6104cd565b005b6060600080548060200260200160405190810160405280929190818152602001828054801561018957602002820191906000526020600020905b815481526020019060010190808311610175575b5050505050905090565b6000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff169050919050565b60001515600160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff1615151461027c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161027390610955565b60405180910390fd5b6002819080600181540180825580915050600190039060005260206000200160009091909190915090805190602001906102b79291906104f9565b506001600460008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546103089190610a81565b925050819055506001600360008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600085815260200190815260200160002060006101000a81548160ff021916908315150217905550600080549050600460008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054141561041c5760018060008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055505b50505050565b60606002805480602002602001604051908101604052809291908181526020016000905b828210156104b8578382906000526020600020018054806020026020016040519081016040528092919081815260200182805480156104a457602002820191906000526020600020905b815481526020019060010190808311610490575b505050505081526020019060010190610446565b50505050905090565b60006001905092915050565b600081908060018154018082558091505060019003906000526020600020016000909190919091505550565b828054828255906000526020600020908101928215610535579160200282015b82811115610534578251825591602001919060010190610519565b5b5090506105429190610546565b5090565b5b8082111561055f576000816000905550600101610547565b5090565b6000610576610571846109c1565b610990565b9050808382526020820190508285602086028201111561059557600080fd5b60005b858110156105c557816105ab888261060e565b845260208401935060208301925050600181019050610598565b5050509392505050565b6000813590506105de81610b7d565b92915050565b600082601f8301126105f557600080fd5b8135610605848260208601610563565b91505092915050565b60008135905061061d81610b94565b92915050565b60006020828403121561063557600080fd5b6000610643848285016105cf565b91505092915050565b6000806000806080858703121561066257600080fd5b6000610670878288016105cf565b94505060206106818782880161060e565b93505060406106928782880161060e565b925050606085013567ffffffffffffffff8111156106af57600080fd5b6106bb878288016105e4565b91505092959194509250565b6000602082840312156106d957600080fd5b60006106e78482850161060e565b91505092915050565b6000806040838503121561070357600080fd5b60006107118582860161060e565b92505060206107228582860161060e565b9150509250929050565b600061073883836107cd565b905092915050565b600061074c83836108d8565b60208301905092915050565b600061076382610a0d565b61076d8185610a3d565b93508360208202850161077f856109ed565b8060005b858110156107bb578484038952815161079c858261072c565b94506107a783610a23565b925060208a01995050600181019050610783565b50829750879550505050505092915050565b60006107d882610a18565b6107e28185610a4e565b93506107ed836109fd565b8060005b8381101561081e5781516108058882610740565b975061081083610a30565b9250506001810190506107f1565b5085935050505092915050565b600061083682610a18565b6108408185610a5f565b935061084b836109fd565b8060005b8381101561087c5781516108638882610740565b975061086e83610a30565b92505060018101905061084f565b5085935050505092915050565b61089281610ae9565b82525050565b60006108a5601383610a70565b91507f566f74657220616c726561647920766f746564000000000000000000000000006000830152602082019050919050565b6108e181610b15565b82525050565b6108f081610b15565b82525050565b600060208201905081810360008301526109108184610758565b905092915050565b60006020820190508181036000830152610932818461082b565b905092915050565b600060208201905061094f6000830184610889565b92915050565b6000602082019050818103600083015261096e81610898565b9050919050565b600060208201905061098a60008301846108e7565b92915050565b6000604051905081810181811067ffffffffffffffff821117156109b7576109b6610b4e565b5b8060405250919050565b600067ffffffffffffffff8211156109dc576109db610b4e565b5b602082029050602081019050919050565b6000819050602082019050919050565b6000819050602082019050919050565b600081519050919050565b600081519050919050565b6000602082019050919050565b6000602082019050919050565b600082825260208201905092915050565b600082825260208201905092915050565b600082825260208201905092915050565b600082825260208201905092915050565b6000610a8c82610b15565b9150610a9783610b15565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115610acc57610acb610b1f565b5b828201905092915050565b6000610ae282610af5565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b610b8681610ad7565b8114610b9157600080fd5b50565b610b9d81610b15565b8114610ba857600080fd5b5056fea2646970667358221220f89f57170ac523179eb4daed2fb01812e3ddf81f11db0b11408eb7a1826245e464736f6c63430008000033608060405234801561001057600080fd5b50610a3d806100206000396000f3fe608060405234801561001057600080fd5b506004361061002b5760003560e01c8063c8344a2014610030575b600080fd5b61004a60048036038101906100459190610689565b610060565b6040516100579190610791565b60405180910390f35b6060600067ffffffffffffffff8111156100a3577f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6040519080825280602002602001820160405280156100d15781602001602082028036833780820191505090505b50600090805190602001906100e7929190610509565b5060008373ffffffffffffffffffffffffffffffffffffffff166306a49fce6040518163ffffffff1660e01b815260040160006040518083038186803b15801561013057600080fd5b505afa158015610144573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f8201168201806040525081019061016d9190610648565b905060008151905060008060005b8381101561034a578773ffffffffffffffffffffffffffffffffffffffff1663de2e19a08683815181106101d8577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b602002602001015160016040518363ffffffff1660e01b81526004016101ff9291906107b3565b60206040518083038186803b15801561021757600080fd5b505afa15801561022b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061024f91906106c5565b91508282111561025d578192505b60028761026a9190610872565b8311156103375760008582815181106102ac577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60200260200101519080600181540180825580915050600190039060005260206000200160009091909190915055600080548060200260200160405190810160405280929190818152602001828054801561032657602002820191906000526020600020905b815481526020019060010190808311610312575b505050505095505050505050610503565b808061034290610903565b91505061017b565b600090505b838110156104aa578773ffffffffffffffffffffffffffffffffffffffff1663de2e19a08683815181106103ac577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b602002602001015160016040518363ffffffff1660e01b81526004016103d39291906107b3565b60206040518083038186803b1580156103eb57600080fd5b505afa1580156103ff573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061042391906106c5565b915082821415610497576000858281518110610468577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b602002602001015190806001815401808255809150506001900390600052602060002001600090919091909150555b80806104a290610903565b91505061034f565b60008054806020026020016040519081016040528092919081815260200182805480156104f657602002820191906000526020600020905b8154815260200190600101908083116104e2575b5050505050955050505050505b92915050565b828054828255906000526020600020908101928215610545579160200282015b82811115610544578251825591602001919060010190610529565b5b5090506105529190610556565b5090565b5b8082111561056f576000816000905550600101610557565b5090565b60006105866105818461080d565b6107dc565b905080838252602082019050828560208602820111156105a557600080fd5b60005b858110156105d557816105bb8882610633565b8452602084019350602083019250506001810190506105a8565b5050509392505050565b600082601f8301126105f057600080fd5b8151610600848260208601610573565b91505092915050565b600081359050610618816109d9565b92915050565b60008135905061062d816109f0565b92915050565b600081519050610642816109f0565b92915050565b60006020828403121561065a57600080fd5b600082015167ffffffffffffffff81111561067457600080fd5b610680848285016105df565b91505092915050565b6000806040838503121561069c57600080fd5b60006106aa85828601610609565b92505060206106bb8582860161061e565b9150509250929050565b6000602082840312156106d757600080fd5b60006106e584828501610633565b91505092915050565b60006106fa8383610773565b60208301905092915050565b600061071182610849565b61071b8185610861565b935061072683610839565b8060005b8381101561075757815161073e88826106ee565b975061074983610854565b92505060018101905061072a565b5085935050505092915050565b61076d816108f1565b82525050565b61077c816108e7565b82525050565b61078b816108e7565b82525050565b600060208201905081810360008301526107ab8184610706565b905092915050565b60006040820190506107c86000830185610782565b6107d56020830184610764565b9392505050565b6000604051905081810181811067ffffffffffffffff82111715610803576108026109aa565b5b8060405250919050565b600067ffffffffffffffff821115610828576108276109aa565b5b602082029050602081019050919050565b6000819050602082019050919050565b600081519050919050565b6000602082019050919050565b600082825260208201905092915050565b600061087d826108e7565b9150610888836108e7565b9250826108985761089761097b565b5b828204905092915050565b60006108ae826108c7565b9050919050565b60006108c0826108a3565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b60006108fc826108e7565b9050919050565b600061090e826108e7565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8214156109415761094061094c565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6109e2816108b5565b81146109ed57600080fd5b50565b6109f9816108e7565b8114610a0457600080fd5b5056fea2646970667358221220cae97eb2d36feda6b5f0193d4493846cc0a3c454db16267c8173559085497bef64736f6c63430008000033608060405234801561001057600080fd5b50610abd806100206000396000f3fe608060405234801561001057600080fd5b506004361061002b5760003560e01c8063c8344a2014610030575b600080fd5b61004a600480360381019061004591906106d4565b610060565b60405161005791906107cd565b60405180910390f35b6060600067ffffffffffffffff8111156100a3577f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6040519080825280602002602001820160405280156100d15781602001602082028036833780820191505090505b50600190805190602001906100e7929190610554565b5082600560006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506002826101369190610904565b600481905550600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166306a49fce6040518163ffffffff1660e01b815260040160006040518083038186803b1580156101a457600080fd5b505afa1580156101b8573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f820116820180604052508101906101e19190610693565b600290805190602001906101f6929190610554565b50600280549050600381905550600080600191505b60035482101561025c5761021e826102e0565b610226610475565b90506004546000808381526020019081526020016000205411156102495761025c565b818061025490610983565b92505061020b565b600181908060018154018082558091505060019003906000526020600020016000909190919091505560018054806020026020016040519081016040528092919081815260200182805480156102d157602002820191906000526020600020905b8154815260200190600101908083116102bd575b50505050509250505092915050565b600080600091505b60035482101561047057600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663de2e19a06002848154811061036a577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b9060005260206000200154856040518363ffffffff1660e01b81526004016103939291906107ef565b60206040518083038186803b1580156103ab57600080fd5b505afa1580156103bf573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103e39190610710565b905082816103f19190610904565b6000806002858154811061042e577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b90600052602060002001548152602001908152602001600020600082825461045691906108ae565b92505081905550818061046890610983565b9250506102e8565b505050565b60008060008060008093505b60035484101561054a57600080600286815481106104c8577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b90600052602060002001548152602001908152602001600020549250818311156105375782915060028481548110610529577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b906000526020600020015490505b838061054290610983565b945050610481565b8094505050505090565b828054828255906000526020600020908101928215610590579160200282015b8281111561058f578251825591602001919060010190610574565b5b50905061059d91906105a1565b5090565b5b808211156105ba5760008160009055506001016105a2565b5090565b60006105d16105cc84610849565b610818565b905080838252602082019050828560208602820111156105f057600080fd5b60005b858110156106205781610606888261067e565b8452602084019350602083019250506001810190506105f3565b5050509392505050565b600082601f83011261063b57600080fd5b815161064b8482602086016105be565b91505092915050565b60008135905061066381610a59565b92915050565b60008135905061067881610a70565b92915050565b60008151905061068d81610a70565b92915050565b6000602082840312156106a557600080fd5b600082015167ffffffffffffffff8111156106bf57600080fd5b6106cb8482850161062a565b91505092915050565b600080604083850312156106e757600080fd5b60006106f585828601610654565b925050602061070685828601610669565b9150509250929050565b60006020828403121561072257600080fd5b60006107308482850161067e565b91505092915050565b600061074583836107af565b60208301905092915050565b600061075c82610885565b610766818561089d565b935061077183610875565b8060005b838110156107a25781516107898882610739565b975061079483610890565b925050600181019050610775565b5085935050505092915050565b6107b881610979565b82525050565b6107c781610979565b82525050565b600060208201905081810360008301526107e78184610751565b905092915050565b600060408201905061080460008301856107be565b61081160208301846107be565b9392505050565b6000604051905081810181811067ffffffffffffffff8211171561083f5761083e610a2a565b5b8060405250919050565b600067ffffffffffffffff82111561086457610863610a2a565b5b602082029050602081019050919050565b6000819050602082019050919050565b600081519050919050565b6000602082019050919050565b600082825260208201905092915050565b60006108b982610979565b91506108c483610979565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff038211156108f9576108f86109cc565b5b828201905092915050565b600061090f82610979565b915061091a83610979565b92508261092a576109296109fb565b5b828204905092915050565b600061094082610959565b9050919050565b600061095282610935565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600061098e82610979565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8214156109c1576109c06109cc565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b610a6281610947565b8114610a6d57600080fd5b50565b610a7981610979565b8114610a8457600080fd5b5056fea2646970667358221220234b6d73a60f4a4c9622efe4186ae0bfece645f03bbc0062e8a1ee76416a80c064736f6c63430008000033608060405234801561001057600080fd5b50610d61806100206000396000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c8063a2fb117514610046578063c5071fd314610076578063c8344a20146100a6575b600080fd5b610060600480360381019061005b91906109c2565b6100d6565b60405161006d9190610aa1565b60405180910390f35b610090600480360381019061008b91906108d9565b6100fa565b60405161009d9190610a7f565b60405180910390f35b6100c060048036038101906100bb9190610986565b6104b5565b6040516100cd9190610a7f565b60405180910390f35b600081815481106100e657600080fd5b906000526020600020016000915090505481565b60606000825167ffffffffffffffff81111561013f577f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b60405190808252806020026020018201604052801561016d5781602001602082028036833780820191505090505b50905060005b83518110156101d75760008282815181106101b7577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6020026020010181815250506001816101d09190610b7e565b9050610173565b5060005b84518110156103045760005b84518110156102f057858281518110610229577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60200260200101518181518110610269577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60200260200101516001865161027f9190610b7e565b6102899190610bd4565b8382815181106102c2577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b602002602001018181516102d69190610b7e565b9150818152505080806102e890610c56565b9150506101e7565b5080806102fc90610c56565b9150506101db565b506000805b8451811015610459578183828151811061034c577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b602002602001015114156103845760008190806001815401808255809150506001900390600052602060002001600090919091909150555b818382815181106103be577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6020026020010151111561044657828181518110610405577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6020026020010151915060008061041c91906105e1565b60008190806001815401808255809150506001900390600052602060002001600090919091909150555b808061045190610c56565b915050610309565b5060008054806020026020016040519081016040528092919081815260200182805480156104a657602002820191906000526020600020905b815481526020019060010190808311610492575b50505050509250505092915050565b606060008373ffffffffffffffffffffffffffffffffffffffff1663afa524086040518163ffffffff1660e01b8152600401600060405180830381600087803b15801561050157600080fd5b505af1158015610515573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f8201168201806040525081019061053e9190610898565b905060008473ffffffffffffffffffffffffffffffffffffffff166306a49fce6040518163ffffffff1660e01b815260040160006040518083038186803b15801561058857600080fd5b505afa15801561059c573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f820116820180604052508101906105c59190610945565b905060006105d383836100fa565b905080935050505092915050565b50805460008255906000526020600020908101906105ff9190610602565b50565b5b8082111561061b576000816000905550600101610603565b5090565b600061063261062d84610aed565b610abc565b9050808382526020820190508260005b8581101561067257813585016106588882610805565b845260208401935060208301925050600181019050610642565b5050509392505050565b600061068f61068a84610aed565b610abc565b9050808382526020820190508260005b858110156106cf57815185016106b5888261082f565b84526020840193506020830192505060018101905061069f565b5050509392505050565b60006106ec6106e784610b19565b610abc565b9050808382526020820190508285602086028201111561070b57600080fd5b60005b8581101561073b5781610721888261086e565b84526020840193506020830192505060018101905061070e565b5050509392505050565b600061075861075384610b19565b610abc565b9050808382526020820190508285602086028201111561077757600080fd5b60005b858110156107a7578161078d8882610883565b84526020840193506020830192505060018101905061077a565b5050509392505050565b600082601f8301126107c257600080fd5b81356107d284826020860161061f565b91505092915050565b600082601f8301126107ec57600080fd5b81516107fc84826020860161067c565b91505092915050565b600082601f83011261081657600080fd5b81356108268482602086016106d9565b91505092915050565b600082601f83011261084057600080fd5b8151610850848260208601610745565b91505092915050565b60008135905061086881610cfd565b92915050565b60008135905061087d81610d14565b92915050565b60008151905061089281610d14565b92915050565b6000602082840312156108aa57600080fd5b600082015167ffffffffffffffff8111156108c457600080fd5b6108d0848285016107db565b91505092915050565b600080604083850312156108ec57600080fd5b600083013567ffffffffffffffff81111561090657600080fd5b610912858286016107b1565b925050602083013567ffffffffffffffff81111561092f57600080fd5b61093b85828601610805565b9150509250929050565b60006020828403121561095757600080fd5b600082015167ffffffffffffffff81111561097157600080fd5b61097d8482850161082f565b91505092915050565b6000806040838503121561099957600080fd5b60006109a785828601610859565b92505060206109b88582860161086e565b9150509250929050565b6000602082840312156109d457600080fd5b60006109e28482850161086e565b91505092915050565b60006109f78383610a61565b60208301905092915050565b6000610a0e82610b55565b610a188185610b6d565b9350610a2383610b45565b8060005b83811015610a54578151610a3b88826109eb565b9750610a4683610b60565b925050600181019050610a27565b5085935050505092915050565b610a6a81610c4c565b82525050565b610a7981610c4c565b82525050565b60006020820190508181036000830152610a998184610a03565b905092915050565b6000602082019050610ab66000830184610a70565b92915050565b6000604051905081810181811067ffffffffffffffff82111715610ae357610ae2610cce565b5b8060405250919050565b600067ffffffffffffffff821115610b0857610b07610cce565b5b602082029050602081019050919050565b600067ffffffffffffffff821115610b3457610b33610cce565b5b602082029050602081019050919050565b6000819050602082019050919050565b600081519050919050565b6000602082019050919050565b600082825260208201905092915050565b6000610b8982610c4c565b9150610b9483610c4c565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115610bc957610bc8610c9f565b5b828201905092915050565b6000610bdf82610c4c565b9150610bea83610c4c565b925082821015610bfd57610bfc610c9f565b5b828203905092915050565b6000610c1382610c2c565b9050919050565b6000610c2582610c08565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b6000610c6182610c4c565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415610c9457610c93610c9f565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b610d0681610c1a565b8114610d1157600080fd5b50565b610d1d81610c4c565b8114610d2857600080fd5b5056fea2646970667358221220bec1b76642477bb0a557e2eae2ee679a4e585ced49890e09d5e0a85a2b803f5b64736f6c63430008000033a2646970667358221220fa2318ef9b033375a6da0741ad4d270d6286f4d5aa58837f23760a8803913eca64736f6c63430008000033",
  "immutableReferences": {},
  "generatedSources": [],
  "deployedGeneratedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:10938:17",
        "statements": [
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "91:260:17",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "101:74:17",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "length",
                            "nodeType": "YulIdentifier",
                            "src": "167:6:17"
                          }
                        ],
                        "functionName": {
                          "name": "array_allocation_size_t_string_memory_ptr",
                          "nodeType": "YulIdentifier",
                          "src": "125:41:17"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "125:49:17"
                      }
                    ],
                    "functionName": {
                      "name": "allocateMemory",
                      "nodeType": "YulIdentifier",
                      "src": "110:14:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "110:65:17"
                  },
                  "variableNames": [
                    {
                      "name": "array",
                      "nodeType": "YulIdentifier",
                      "src": "101:5:17"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "array",
                        "nodeType": "YulIdentifier",
                        "src": "191:5:17"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "198:6:17"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "184:6:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "184:21:17"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "184:21:17"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "214:27:17",
                  "value": {
                    "arguments": [
                      {
                        "name": "array",
                        "nodeType": "YulIdentifier",
                        "src": "229:5:17"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "236:4:17",
                        "type": "",
                        "value": "0x20"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "225:3:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "225:16:17"
                  },
                  "variables": [
                    {
                      "name": "dst",
                      "nodeType": "YulTypedName",
                      "src": "218:3:17",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "279:16:17",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "288:1:17",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "291:1:17",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "281:6:17"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "281:12:17"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "281:12:17"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "src",
                            "nodeType": "YulIdentifier",
                            "src": "260:3:17"
                          },
                          {
                            "name": "length",
                            "nodeType": "YulIdentifier",
                            "src": "265:6:17"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "256:3:17"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "256:16:17"
                      },
                      {
                        "name": "end",
                        "nodeType": "YulIdentifier",
                        "src": "274:3:17"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "253:2:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "253:25:17"
                  },
                  "nodeType": "YulIf",
                  "src": "250:2:17"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "src",
                        "nodeType": "YulIdentifier",
                        "src": "328:3:17"
                      },
                      {
                        "name": "dst",
                        "nodeType": "YulIdentifier",
                        "src": "333:3:17"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "338:6:17"
                      }
                    ],
                    "functionName": {
                      "name": "copy_calldata_to_memory",
                      "nodeType": "YulIdentifier",
                      "src": "304:23:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "304:41:17"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "304:41:17"
                }
              ]
            },
            "name": "abi_decode_available_length_t_string_memory_ptr",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "src",
                "nodeType": "YulTypedName",
                "src": "64:3:17",
                "type": ""
              },
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "69:6:17",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "77:3:17",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "array",
                "nodeType": "YulTypedName",
                "src": "85:5:17",
                "type": ""
              }
            ],
            "src": "7:344:17"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "409:87:17",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "419:29:17",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "441:6:17"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "428:12:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "428:20:17"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "419:5:17"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "484:5:17"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_address",
                      "nodeType": "YulIdentifier",
                      "src": "457:26:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "457:33:17"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "457:33:17"
                }
              ]
            },
            "name": "abi_decode_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "387:6:17",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "395:3:17",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "403:5:17",
                "type": ""
              }
            ],
            "src": "357:139:17"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "578:211:17",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "627:16:17",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "636:1:17",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "639:1:17",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "629:6:17"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "629:12:17"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "629:12:17"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "606:6:17"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "614:4:17",
                                "type": "",
                                "value": "0x1f"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "602:3:17"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "602:17:17"
                          },
                          {
                            "name": "end",
                            "nodeType": "YulIdentifier",
                            "src": "621:3:17"
                          }
                        ],
                        "functionName": {
                          "name": "slt",
                          "nodeType": "YulIdentifier",
                          "src": "598:3:17"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "598:27:17"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "591:6:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "591:35:17"
                  },
                  "nodeType": "YulIf",
                  "src": "588:2:17"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "652:34:17",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "679:6:17"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "666:12:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "666:20:17"
                  },
                  "variables": [
                    {
                      "name": "length",
                      "nodeType": "YulTypedName",
                      "src": "656:6:17",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "695:88:17",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "offset",
                            "nodeType": "YulIdentifier",
                            "src": "756:6:17"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "764:4:17",
                            "type": "",
                            "value": "0x20"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "752:3:17"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "752:17:17"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "771:6:17"
                      },
                      {
                        "name": "end",
                        "nodeType": "YulIdentifier",
                        "src": "779:3:17"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_available_length_t_string_memory_ptr",
                      "nodeType": "YulIdentifier",
                      "src": "704:47:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "704:79:17"
                  },
                  "variableNames": [
                    {
                      "name": "array",
                      "nodeType": "YulIdentifier",
                      "src": "695:5:17"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_t_string_memory_ptr",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "556:6:17",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "564:3:17",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "array",
                "nodeType": "YulTypedName",
                "src": "572:5:17",
                "type": ""
              }
            ],
            "src": "516:273:17"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "915:1137:17",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "959:16:17",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "968:1:17",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "971:1:17",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "961:6:17"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "961:12:17"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "961:12:17"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "end",
                            "nodeType": "YulIdentifier",
                            "src": "936:3:17"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "941:9:17"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "932:3:17"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "932:19:17"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "953:4:17",
                        "type": "",
                        "value": "0xa0"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "928:3:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "928:30:17"
                  },
                  "nodeType": "YulIf",
                  "src": "925:2:17"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "984:29:17",
                  "value": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1008:4:17",
                        "type": "",
                        "value": "0xa0"
                      }
                    ],
                    "functionName": {
                      "name": "allocateMemory",
                      "nodeType": "YulIdentifier",
                      "src": "993:14:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "993:20:17"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "984:5:17"
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "1023:156:17",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "1064:15:17",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1078:1:17",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "1068:6:17",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "1104:5:17"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "1111:4:17",
                                "type": "",
                                "value": "0x00"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1100:3:17"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1100:16:17"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "1143:9:17"
                                  },
                                  {
                                    "name": "offset",
                                    "nodeType": "YulIdentifier",
                                    "src": "1154:6:17"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "1139:3:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1139:22:17"
                              },
                              {
                                "name": "end",
                                "nodeType": "YulIdentifier",
                                "src": "1163:3:17"
                              }
                            ],
                            "functionName": {
                              "name": "abi_decode_t_uint256",
                              "nodeType": "YulIdentifier",
                              "src": "1118:20:17"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1118:49:17"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "1093:6:17"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1093:75:17"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "1093:75:17"
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "1189:254:17",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "1224:46:17",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "1255:9:17"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "1266:2:17",
                                "type": "",
                                "value": "32"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1251:3:17"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1251:18:17"
                          }
                        ],
                        "functionName": {
                          "name": "calldataload",
                          "nodeType": "YulIdentifier",
                          "src": "1238:12:17"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1238:32:17"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "1228:6:17",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "1317:16:17",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "1326:1:17",
                                  "type": "",
                                  "value": "0"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "1329:1:17",
                                  "type": "",
                                  "value": "0"
                                }
                              ],
                              "functionName": {
                                "name": "revert",
                                "nodeType": "YulIdentifier",
                                "src": "1319:6:17"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "1319:12:17"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "1319:12:17"
                          }
                        ]
                      },
                      "condition": {
                        "arguments": [
                          {
                            "name": "offset",
                            "nodeType": "YulIdentifier",
                            "src": "1289:6:17"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1297:18:17",
                            "type": "",
                            "value": "0xffffffffffffffff"
                          }
                        ],
                        "functionName": {
                          "name": "gt",
                          "nodeType": "YulIdentifier",
                          "src": "1286:2:17"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1286:30:17"
                      },
                      "nodeType": "YulIf",
                      "src": "1283:2:17"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "1358:5:17"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "1365:4:17",
                                "type": "",
                                "value": "0x20"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1354:3:17"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1354:16:17"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "1407:9:17"
                                  },
                                  {
                                    "name": "offset",
                                    "nodeType": "YulIdentifier",
                                    "src": "1418:6:17"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "1403:3:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1403:22:17"
                              },
                              {
                                "name": "end",
                                "nodeType": "YulIdentifier",
                                "src": "1427:3:17"
                              }
                            ],
                            "functionName": {
                              "name": "abi_decode_t_string_memory_ptr",
                              "nodeType": "YulIdentifier",
                              "src": "1372:30:17"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1372:59:17"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "1347:6:17"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1347:85:17"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "1347:85:17"
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "1453:261:17",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "1495:46:17",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "1526:9:17"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "1537:2:17",
                                "type": "",
                                "value": "64"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1522:3:17"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1522:18:17"
                          }
                        ],
                        "functionName": {
                          "name": "calldataload",
                          "nodeType": "YulIdentifier",
                          "src": "1509:12:17"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1509:32:17"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "1499:6:17",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "1588:16:17",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "1597:1:17",
                                  "type": "",
                                  "value": "0"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "1600:1:17",
                                  "type": "",
                                  "value": "0"
                                }
                              ],
                              "functionName": {
                                "name": "revert",
                                "nodeType": "YulIdentifier",
                                "src": "1590:6:17"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "1590:12:17"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "1590:12:17"
                          }
                        ]
                      },
                      "condition": {
                        "arguments": [
                          {
                            "name": "offset",
                            "nodeType": "YulIdentifier",
                            "src": "1560:6:17"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1568:18:17",
                            "type": "",
                            "value": "0xffffffffffffffff"
                          }
                        ],
                        "functionName": {
                          "name": "gt",
                          "nodeType": "YulIdentifier",
                          "src": "1557:2:17"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1557:30:17"
                      },
                      "nodeType": "YulIf",
                      "src": "1554:2:17"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "1629:5:17"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "1636:4:17",
                                "type": "",
                                "value": "0x40"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1625:3:17"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1625:16:17"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "1678:9:17"
                                  },
                                  {
                                    "name": "offset",
                                    "nodeType": "YulIdentifier",
                                    "src": "1689:6:17"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "1674:3:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1674:22:17"
                              },
                              {
                                "name": "end",
                                "nodeType": "YulIdentifier",
                                "src": "1698:3:17"
                              }
                            ],
                            "functionName": {
                              "name": "abi_decode_t_string_memory_ptr",
                              "nodeType": "YulIdentifier",
                              "src": "1643:30:17"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1643:59:17"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "1618:6:17"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1618:85:17"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "1618:85:17"
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "1724:156:17",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "1764:16:17",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1778:2:17",
                        "type": "",
                        "value": "96"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "1768:6:17",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "1805:5:17"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "1812:4:17",
                                "type": "",
                                "value": "0x60"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1801:3:17"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1801:16:17"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "1844:9:17"
                                  },
                                  {
                                    "name": "offset",
                                    "nodeType": "YulIdentifier",
                                    "src": "1855:6:17"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "1840:3:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1840:22:17"
                              },
                              {
                                "name": "end",
                                "nodeType": "YulIdentifier",
                                "src": "1864:3:17"
                              }
                            ],
                            "functionName": {
                              "name": "abi_decode_t_uint256",
                              "nodeType": "YulIdentifier",
                              "src": "1819:20:17"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1819:49:17"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "1794:6:17"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1794:75:17"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "1794:75:17"
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "1890:155:17",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "1928:17:17",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1942:3:17",
                        "type": "",
                        "value": "128"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "1932:6:17",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "1970:5:17"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "1977:4:17",
                                "type": "",
                                "value": "0x80"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1966:3:17"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1966:16:17"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "2009:9:17"
                                  },
                                  {
                                    "name": "offset",
                                    "nodeType": "YulIdentifier",
                                    "src": "2020:6:17"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "2005:3:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2005:22:17"
                              },
                              {
                                "name": "end",
                                "nodeType": "YulIdentifier",
                                "src": "2029:3:17"
                              }
                            ],
                            "functionName": {
                              "name": "abi_decode_t_uint256",
                              "nodeType": "YulIdentifier",
                              "src": "1984:20:17"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1984:49:17"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "1959:6:17"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1959:75:17"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "1959:75:17"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_t_struct$_ElectionInfo_$182_memory_ptr",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "890:9:17",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "901:3:17",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "909:5:17",
                "type": ""
              }
            ],
            "src": "831:1221:17"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2110:87:17",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2120:29:17",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "2142:6:17"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "2129:12:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2129:20:17"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "2120:5:17"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "2185:5:17"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "2158:26:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2158:33:17"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2158:33:17"
                }
              ]
            },
            "name": "abi_decode_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "2088:6:17",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "2096:3:17",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "2104:5:17",
                "type": ""
              }
            ],
            "src": "2058:139:17"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2366:832:17",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2413:16:17",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2422:1:17",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2425:1:17",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "2415:6:17"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2415:12:17"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2415:12:17"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "2387:7:17"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2396:9:17"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "2383:3:17"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2383:23:17"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2408:3:17",
                        "type": "",
                        "value": "160"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "2379:3:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2379:33:17"
                  },
                  "nodeType": "YulIf",
                  "src": "2376:2:17"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "2439:239:17",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "2454:45:17",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "2485:9:17"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "2496:1:17",
                                "type": "",
                                "value": "0"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "2481:3:17"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2481:17:17"
                          }
                        ],
                        "functionName": {
                          "name": "calldataload",
                          "nodeType": "YulIdentifier",
                          "src": "2468:12:17"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2468:31:17"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "2458:6:17",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "2546:16:17",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "2555:1:17",
                                  "type": "",
                                  "value": "0"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "2558:1:17",
                                  "type": "",
                                  "value": "0"
                                }
                              ],
                              "functionName": {
                                "name": "revert",
                                "nodeType": "YulIdentifier",
                                "src": "2548:6:17"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "2548:12:17"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "2548:12:17"
                          }
                        ]
                      },
                      "condition": {
                        "arguments": [
                          {
                            "name": "offset",
                            "nodeType": "YulIdentifier",
                            "src": "2518:6:17"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2526:18:17",
                            "type": "",
                            "value": "0xffffffffffffffff"
                          }
                        ],
                        "functionName": {
                          "name": "gt",
                          "nodeType": "YulIdentifier",
                          "src": "2515:2:17"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2515:30:17"
                      },
                      "nodeType": "YulIf",
                      "src": "2512:2:17"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "2576:92:17",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "2640:9:17"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "2651:6:17"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "2636:3:17"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2636:22:17"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "2660:7:17"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_struct$_ElectionInfo_$182_memory_ptr",
                          "nodeType": "YulIdentifier",
                          "src": "2586:49:17"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2586:82:17"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "2576:6:17"
                        }
                      ]
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "2688:118:17",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "2703:16:17",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2717:2:17",
                        "type": "",
                        "value": "32"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "2707:6:17",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "2733:63:17",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "2768:9:17"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "2779:6:17"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "2764:3:17"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2764:22:17"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "2788:7:17"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_uint256",
                          "nodeType": "YulIdentifier",
                          "src": "2743:20:17"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2743:53:17"
                      },
                      "variableNames": [
                        {
                          "name": "value1",
                          "nodeType": "YulIdentifier",
                          "src": "2733:6:17"
                        }
                      ]
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "2816:118:17",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "2831:16:17",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2845:2:17",
                        "type": "",
                        "value": "64"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "2835:6:17",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "2861:63:17",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "2896:9:17"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "2907:6:17"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "2892:3:17"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2892:22:17"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "2916:7:17"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_uint256",
                          "nodeType": "YulIdentifier",
                          "src": "2871:20:17"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2871:53:17"
                      },
                      "variableNames": [
                        {
                          "name": "value2",
                          "nodeType": "YulIdentifier",
                          "src": "2861:6:17"
                        }
                      ]
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "2944:118:17",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "2959:16:17",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2973:2:17",
                        "type": "",
                        "value": "96"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "2963:6:17",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "2989:63:17",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "3024:9:17"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "3035:6:17"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "3020:3:17"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3020:22:17"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "3044:7:17"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "2999:20:17"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2999:53:17"
                      },
                      "variableNames": [
                        {
                          "name": "value3",
                          "nodeType": "YulIdentifier",
                          "src": "2989:6:17"
                        }
                      ]
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "3072:119:17",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "3087:17:17",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3101:3:17",
                        "type": "",
                        "value": "128"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "3091:6:17",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "3118:63:17",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "3153:9:17"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "3164:6:17"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "3149:3:17"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3149:22:17"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "3173:7:17"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "3128:20:17"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3128:53:17"
                      },
                      "variableNames": [
                        {
                          "name": "value4",
                          "nodeType": "YulIdentifier",
                          "src": "3118:6:17"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_struct$_ElectionInfo_$182_memory_ptrt_uint256t_uint256t_addresst_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2304:9:17",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "2315:7:17",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2327:6:17",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "2335:6:17",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "2343:6:17",
                "type": ""
              },
              {
                "name": "value3",
                "nodeType": "YulTypedName",
                "src": "2351:6:17",
                "type": ""
              },
              {
                "name": "value4",
                "nodeType": "YulTypedName",
                "src": "2359:6:17",
                "type": ""
              }
            ],
            "src": "2203:995:17"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3269:53:17",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "3286:3:17"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "3309:5:17"
                          }
                        ],
                        "functionName": {
                          "name": "cleanup_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "3291:17:17"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3291:24:17"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3279:6:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3279:37:17"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3279:37:17"
                }
              ]
            },
            "name": "abi_encode_t_address_to_t_address_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "3257:5:17",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "3264:3:17",
                "type": ""
              }
            ],
            "src": "3204:118:17"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3408:81:17",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "3425:3:17"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "3476:5:17"
                          }
                        ],
                        "functionName": {
                          "name": "convert_t_contract$_Ballot_$1513_to_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "3430:45:17"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3430:52:17"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3418:6:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3418:65:17"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3418:65:17"
                }
              ]
            },
            "name": "abi_encode_t_contract$_Ballot_$1513_to_t_address_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "3396:5:17",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "3403:3:17",
                "type": ""
              }
            ],
            "src": "3328:161:17"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3576:82:17",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "3593:3:17"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "3645:5:17"
                          }
                        ],
                        "functionName": {
                          "name": "convert_t_contract$_Election_$616_to_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "3598:46:17"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3598:53:17"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3586:6:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3586:66:17"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3586:66:17"
                }
              ]
            },
            "name": "abi_encode_t_contract$_Election_$616_to_t_address_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "3564:5:17",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "3571:3:17",
                "type": ""
              }
            ],
            "src": "3495:163:17"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3754:91:17",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "3771:3:17"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "3832:5:17"
                          }
                        ],
                        "functionName": {
                          "name": "convert_t_contract$_ResultCalculator_$2530_to_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "3776:55:17"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3776:62:17"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3764:6:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3764:75:17"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3764:75:17"
                }
              ]
            },
            "name": "abi_encode_t_contract$_ResultCalculator_$2530_to_t_address_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "3742:5:17",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "3749:3:17",
                "type": ""
              }
            ],
            "src": "3664:181:17"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3933:262:17",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "3943:53:17",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "3990:5:17"
                      }
                    ],
                    "functionName": {
                      "name": "array_length_t_string_memory_ptr",
                      "nodeType": "YulIdentifier",
                      "src": "3957:32:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3957:39:17"
                  },
                  "variables": [
                    {
                      "name": "length",
                      "nodeType": "YulTypedName",
                      "src": "3947:6:17",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4005:68:17",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "4061:3:17"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "4066:6:17"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr",
                      "nodeType": "YulIdentifier",
                      "src": "4012:48:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4012:61:17"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "4005:3:17"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "4108:5:17"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4115:4:17",
                            "type": "",
                            "value": "0x20"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4104:3:17"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4104:16:17"
                      },
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "4122:3:17"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "4127:6:17"
                      }
                    ],
                    "functionName": {
                      "name": "copy_memory_to_memory",
                      "nodeType": "YulIdentifier",
                      "src": "4082:21:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4082:52:17"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4082:52:17"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4143:46:17",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "4154:3:17"
                      },
                      {
                        "arguments": [
                          {
                            "name": "length",
                            "nodeType": "YulIdentifier",
                            "src": "4181:6:17"
                          }
                        ],
                        "functionName": {
                          "name": "round_up_to_mul_of_32",
                          "nodeType": "YulIdentifier",
                          "src": "4159:21:17"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4159:29:17"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "4150:3:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4150:39:17"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "4143:3:17"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "3914:5:17",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "3921:3:17",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "3929:3:17",
                "type": ""
              }
            ],
            "src": "3851:344:17"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4347:237:17",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "4357:74:17",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "4423:3:17"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4428:2:17",
                        "type": "",
                        "value": "51"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "4364:58:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4364:67:17"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "4357:3:17"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "4452:3:17"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4457:1:17",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4448:3:17"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4448:11:17"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "4461:34:17",
                        "type": "",
                        "value": "Must be called from the election"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4441:6:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4441:55:17"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4441:55:17"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "4517:3:17"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4522:2:17",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4513:3:17"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4513:12:17"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "4527:21:17",
                        "type": "",
                        "value": " organizer contract"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4506:6:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4506:43:17"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4506:43:17"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4559:19:17",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "4570:3:17"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4575:2:17",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "4566:3:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4566:12:17"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "4559:3:17"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_3ded520295abd6caf5a70c9a0e862cc0aa60e5779e1334dc488e24512bd6574c_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "4335:3:17",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "4343:3:17",
                "type": ""
              }
            ],
            "src": "4201:383:17"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4790:1096:17",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "4800:26:17",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "4816:3:17"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4821:4:17",
                        "type": "",
                        "value": "0xa0"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "4812:3:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4812:14:17"
                  },
                  "variables": [
                    {
                      "name": "tail",
                      "nodeType": "YulTypedName",
                      "src": "4804:4:17",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "4836:170:17",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "4877:43:17",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "4907:5:17"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "4914:4:17",
                                "type": "",
                                "value": "0x00"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "4903:3:17"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "4903:16:17"
                          }
                        ],
                        "functionName": {
                          "name": "mload",
                          "nodeType": "YulIdentifier",
                          "src": "4897:5:17"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4897:23:17"
                      },
                      "variables": [
                        {
                          "name": "memberValue0",
                          "nodeType": "YulTypedName",
                          "src": "4881:12:17",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "name": "memberValue0",
                            "nodeType": "YulIdentifier",
                            "src": "4967:12:17"
                          },
                          {
                            "arguments": [
                              {
                                "name": "pos",
                                "nodeType": "YulIdentifier",
                                "src": "4985:3:17"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "4990:4:17",
                                "type": "",
                                "value": "0x00"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "4981:3:17"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "4981:14:17"
                          }
                        ],
                        "functionName": {
                          "name": "abi_encode_t_uint256_to_t_uint256",
                          "nodeType": "YulIdentifier",
                          "src": "4933:33:17"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4933:63:17"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "4933:63:17"
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "5016:235:17",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "5051:43:17",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "5081:5:17"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "5088:4:17",
                                "type": "",
                                "value": "0x20"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "5077:3:17"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "5077:16:17"
                          }
                        ],
                        "functionName": {
                          "name": "mload",
                          "nodeType": "YulIdentifier",
                          "src": "5071:5:17"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5071:23:17"
                      },
                      "variables": [
                        {
                          "name": "memberValue0",
                          "nodeType": "YulTypedName",
                          "src": "5055:12:17",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "pos",
                                "nodeType": "YulIdentifier",
                                "src": "5119:3:17"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "5124:4:17",
                                "type": "",
                                "value": "0x20"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "5115:3:17"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "5115:14:17"
                          },
                          {
                            "arguments": [
                              {
                                "name": "tail",
                                "nodeType": "YulIdentifier",
                                "src": "5135:4:17"
                              },
                              {
                                "name": "pos",
                                "nodeType": "YulIdentifier",
                                "src": "5141:3:17"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "5131:3:17"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "5131:14:17"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "5108:6:17"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5108:38:17"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "5108:38:17"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "5159:81:17",
                      "value": {
                        "arguments": [
                          {
                            "name": "memberValue0",
                            "nodeType": "YulIdentifier",
                            "src": "5221:12:17"
                          },
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "5235:4:17"
                          }
                        ],
                        "functionName": {
                          "name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr",
                          "nodeType": "YulIdentifier",
                          "src": "5167:53:17"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5167:73:17"
                      },
                      "variableNames": [
                        {
                          "name": "tail",
                          "nodeType": "YulIdentifier",
                          "src": "5159:4:17"
                        }
                      ]
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "5261:242:17",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "5303:43:17",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "5333:5:17"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "5340:4:17",
                                "type": "",
                                "value": "0x40"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "5329:3:17"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "5329:16:17"
                          }
                        ],
                        "functionName": {
                          "name": "mload",
                          "nodeType": "YulIdentifier",
                          "src": "5323:5:17"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5323:23:17"
                      },
                      "variables": [
                        {
                          "name": "memberValue0",
                          "nodeType": "YulTypedName",
                          "src": "5307:12:17",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "pos",
                                "nodeType": "YulIdentifier",
                                "src": "5371:3:17"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "5376:4:17",
                                "type": "",
                                "value": "0x40"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "5367:3:17"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "5367:14:17"
                          },
                          {
                            "arguments": [
                              {
                                "name": "tail",
                                "nodeType": "YulIdentifier",
                                "src": "5387:4:17"
                              },
                              {
                                "name": "pos",
                                "nodeType": "YulIdentifier",
                                "src": "5393:3:17"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "5383:3:17"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "5383:14:17"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "5360:6:17"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5360:38:17"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "5360:38:17"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "5411:81:17",
                      "value": {
                        "arguments": [
                          {
                            "name": "memberValue0",
                            "nodeType": "YulIdentifier",
                            "src": "5473:12:17"
                          },
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "5487:4:17"
                          }
                        ],
                        "functionName": {
                          "name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr",
                          "nodeType": "YulIdentifier",
                          "src": "5419:53:17"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5419:73:17"
                      },
                      "variableNames": [
                        {
                          "name": "tail",
                          "nodeType": "YulIdentifier",
                          "src": "5411:4:17"
                        }
                      ]
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "5513:169:17",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "5553:43:17",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "5583:5:17"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "5590:4:17",
                                "type": "",
                                "value": "0x60"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "5579:3:17"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "5579:16:17"
                          }
                        ],
                        "functionName": {
                          "name": "mload",
                          "nodeType": "YulIdentifier",
                          "src": "5573:5:17"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5573:23:17"
                      },
                      "variables": [
                        {
                          "name": "memberValue0",
                          "nodeType": "YulTypedName",
                          "src": "5557:12:17",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "name": "memberValue0",
                            "nodeType": "YulIdentifier",
                            "src": "5643:12:17"
                          },
                          {
                            "arguments": [
                              {
                                "name": "pos",
                                "nodeType": "YulIdentifier",
                                "src": "5661:3:17"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "5666:4:17",
                                "type": "",
                                "value": "0x60"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "5657:3:17"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "5657:14:17"
                          }
                        ],
                        "functionName": {
                          "name": "abi_encode_t_uint256_to_t_uint256",
                          "nodeType": "YulIdentifier",
                          "src": "5609:33:17"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5609:63:17"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "5609:63:17"
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "5692:167:17",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "5730:43:17",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "5760:5:17"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "5767:4:17",
                                "type": "",
                                "value": "0x80"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "5756:3:17"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "5756:16:17"
                          }
                        ],
                        "functionName": {
                          "name": "mload",
                          "nodeType": "YulIdentifier",
                          "src": "5750:5:17"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5750:23:17"
                      },
                      "variables": [
                        {
                          "name": "memberValue0",
                          "nodeType": "YulTypedName",
                          "src": "5734:12:17",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "name": "memberValue0",
                            "nodeType": "YulIdentifier",
                            "src": "5820:12:17"
                          },
                          {
                            "arguments": [
                              {
                                "name": "pos",
                                "nodeType": "YulIdentifier",
                                "src": "5838:3:17"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "5843:4:17",
                                "type": "",
                                "value": "0x80"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "5834:3:17"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "5834:14:17"
                          }
                        ],
                        "functionName": {
                          "name": "abi_encode_t_uint256_to_t_uint256",
                          "nodeType": "YulIdentifier",
                          "src": "5786:33:17"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5786:63:17"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "5786:63:17"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "5869:11:17",
                  "value": {
                    "name": "tail",
                    "nodeType": "YulIdentifier",
                    "src": "5876:4:17"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "5869:3:17"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_struct$_ElectionInfo_$182_memory_ptr_to_t_struct$_ElectionInfo_$182_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "4769:5:17",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "4776:3:17",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "4785:3:17",
                "type": ""
              }
            ],
            "src": "4658:1228:17"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5947:53:17",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "5964:3:17"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "5987:5:17"
                          }
                        ],
                        "functionName": {
                          "name": "cleanup_t_uint256",
                          "nodeType": "YulIdentifier",
                          "src": "5969:17:17"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5969:24:17"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5957:6:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5957:37:17"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5957:37:17"
                }
              ]
            },
            "name": "abi_encode_t_uint256_to_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "5935:5:17",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "5942:3:17",
                "type": ""
              }
            ],
            "src": "5892:108:17"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6120:140:17",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "6130:26:17",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6142:9:17"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6153:2:17",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "6138:3:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6138:18:17"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "6130:4:17"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "6226:6:17"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6239:9:17"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6250:1:17",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6235:3:17"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6235:17:17"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_contract$_Election_$616_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "6166:59:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6166:87:17"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6166:87:17"
                }
              ]
            },
            "name": "abi_encode_tuple_t_contract$_Election_$616__to_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "6092:9:17",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "6104:6:17",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "6115:4:17",
                "type": ""
              }
            ],
            "src": "6006:254:17"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6437:248:17",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "6447:26:17",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6459:9:17"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6470:2:17",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "6455:3:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6455:18:17"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "6447:4:17"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6494:9:17"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6505:1:17",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6490:3:17"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6490:17:17"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "6513:4:17"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6519:9:17"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "6509:3:17"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6509:20:17"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6483:6:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6483:47:17"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6483:47:17"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "6539:139:17",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "6673:4:17"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_3ded520295abd6caf5a70c9a0e862cc0aa60e5779e1334dc488e24512bd6574c_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "6547:124:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6547:131:17"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "6539:4:17"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_3ded520295abd6caf5a70c9a0e862cc0aa60e5779e1334dc488e24512bd6574c__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "6417:9:17",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "6432:4:17",
                "type": ""
              }
            ],
            "src": "6266:419:17"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6999:603:17",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "7009:27:17",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "7021:9:17"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7032:3:17",
                        "type": "",
                        "value": "160"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "7017:3:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7017:19:17"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "7009:4:17"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7057:9:17"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7068:1:17",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7053:3:17"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7053:17:17"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "7076:4:17"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7082:9:17"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "7072:3:17"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7072:20:17"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7046:6:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7046:47:17"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7046:47:17"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "7102:124:17",
                  "value": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "7212:6:17"
                      },
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "7221:4:17"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_struct$_ElectionInfo_$182_memory_ptr_to_t_struct$_ElectionInfo_$182_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "7110:101:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7110:116:17"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "7102:4:17"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "7295:6:17"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7308:9:17"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7319:2:17",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7304:3:17"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7304:18:17"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_contract$_Ballot_$1513_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "7236:58:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7236:87:17"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7236:87:17"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value2",
                        "nodeType": "YulIdentifier",
                        "src": "7402:6:17"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7415:9:17"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7426:2:17",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7411:3:17"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7411:18:17"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_contract$_ResultCalculator_$2530_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "7333:68:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7333:97:17"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7333:97:17"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value3",
                        "nodeType": "YulIdentifier",
                        "src": "7484:6:17"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7497:9:17"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7508:2:17",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7493:3:17"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7493:18:17"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "7440:43:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7440:72:17"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7440:72:17"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value4",
                        "nodeType": "YulIdentifier",
                        "src": "7566:6:17"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7579:9:17"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7590:3:17",
                            "type": "",
                            "value": "128"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7575:3:17"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7575:19:17"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "7522:43:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7522:73:17"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7522:73:17"
                }
              ]
            },
            "name": "abi_encode_tuple_t_struct$_ElectionInfo_$182_memory_ptr_t_contract$_Ballot_$1513_t_contract$_ResultCalculator_$2530_t_address_t_address__to_t_struct$_ElectionInfo_$182_memory_ptr_t_address_t_address_t_address_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "6939:9:17",
                "type": ""
              },
              {
                "name": "value4",
                "nodeType": "YulTypedName",
                "src": "6951:6:17",
                "type": ""
              },
              {
                "name": "value3",
                "nodeType": "YulTypedName",
                "src": "6959:6:17",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "6967:6:17",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "6975:6:17",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "6983:6:17",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "6994:4:17",
                "type": ""
              }
            ],
            "src": "6691:911:17"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7648:243:17",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "7658:19:17",
                  "value": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7674:2:17",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "7668:5:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7668:9:17"
                  },
                  "variableNames": [
                    {
                      "name": "memPtr",
                      "nodeType": "YulIdentifier",
                      "src": "7658:6:17"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "7686:35:17",
                  "value": {
                    "arguments": [
                      {
                        "name": "memPtr",
                        "nodeType": "YulIdentifier",
                        "src": "7708:6:17"
                      },
                      {
                        "name": "size",
                        "nodeType": "YulIdentifier",
                        "src": "7716:4:17"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "7704:3:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7704:17:17"
                  },
                  "variables": [
                    {
                      "name": "newFreePtr",
                      "nodeType": "YulTypedName",
                      "src": "7690:10:17",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "7832:22:17",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x41",
                            "nodeType": "YulIdentifier",
                            "src": "7834:16:17"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "7834:18:17"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "7834:18:17"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "newFreePtr",
                            "nodeType": "YulIdentifier",
                            "src": "7775:10:17"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7787:18:17",
                            "type": "",
                            "value": "0xffffffffffffffff"
                          }
                        ],
                        "functionName": {
                          "name": "gt",
                          "nodeType": "YulIdentifier",
                          "src": "7772:2:17"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7772:34:17"
                      },
                      {
                        "arguments": [
                          {
                            "name": "newFreePtr",
                            "nodeType": "YulIdentifier",
                            "src": "7811:10:17"
                          },
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "7823:6:17"
                          }
                        ],
                        "functionName": {
                          "name": "lt",
                          "nodeType": "YulIdentifier",
                          "src": "7808:2:17"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7808:22:17"
                      }
                    ],
                    "functionName": {
                      "name": "or",
                      "nodeType": "YulIdentifier",
                      "src": "7769:2:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7769:62:17"
                  },
                  "nodeType": "YulIf",
                  "src": "7766:2:17"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7870:2:17",
                        "type": "",
                        "value": "64"
                      },
                      {
                        "name": "newFreePtr",
                        "nodeType": "YulIdentifier",
                        "src": "7874:10:17"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7863:6:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7863:22:17"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7863:22:17"
                }
              ]
            },
            "name": "allocateMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "size",
                "nodeType": "YulTypedName",
                "src": "7632:4:17",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "7641:6:17",
                "type": ""
              }
            ],
            "src": "7608:283:17"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7964:265:17",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "8069:22:17",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x41",
                            "nodeType": "YulIdentifier",
                            "src": "8071:16:17"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "8071:18:17"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "8071:18:17"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "8041:6:17"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8049:18:17",
                        "type": "",
                        "value": "0xffffffffffffffff"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "8038:2:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8038:30:17"
                  },
                  "nodeType": "YulIf",
                  "src": "8035:2:17"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "8121:41:17",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "length",
                            "nodeType": "YulIdentifier",
                            "src": "8137:6:17"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8145:4:17",
                            "type": "",
                            "value": "0x1f"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8133:3:17"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8133:17:17"
                      },
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8156:4:17",
                            "type": "",
                            "value": "0x1f"
                          }
                        ],
                        "functionName": {
                          "name": "not",
                          "nodeType": "YulIdentifier",
                          "src": "8152:3:17"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8152:9:17"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "8129:3:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8129:33:17"
                  },
                  "variableNames": [
                    {
                      "name": "size",
                      "nodeType": "YulIdentifier",
                      "src": "8121:4:17"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "8199:23:17",
                  "value": {
                    "arguments": [
                      {
                        "name": "size",
                        "nodeType": "YulIdentifier",
                        "src": "8211:4:17"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8217:4:17",
                        "type": "",
                        "value": "0x20"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "8207:3:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8207:15:17"
                  },
                  "variableNames": [
                    {
                      "name": "size",
                      "nodeType": "YulIdentifier",
                      "src": "8199:4:17"
                    }
                  ]
                }
              ]
            },
            "name": "array_allocation_size_t_string_memory_ptr",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "7948:6:17",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "size",
                "nodeType": "YulTypedName",
                "src": "7959:4:17",
                "type": ""
              }
            ],
            "src": "7897:332:17"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8294:40:17",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "8305:22:17",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "8321:5:17"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "8315:5:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8315:12:17"
                  },
                  "variableNames": [
                    {
                      "name": "length",
                      "nodeType": "YulIdentifier",
                      "src": "8305:6:17"
                    }
                  ]
                }
              ]
            },
            "name": "array_length_t_string_memory_ptr",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "8277:5:17",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "8287:6:17",
                "type": ""
              }
            ],
            "src": "8235:99:17"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8426:73:17",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "8443:3:17"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "8448:6:17"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8436:6:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8436:19:17"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8436:19:17"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "8464:29:17",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "8483:3:17"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8488:4:17",
                        "type": "",
                        "value": "0x20"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "8479:3:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8479:14:17"
                  },
                  "variableNames": [
                    {
                      "name": "updated_pos",
                      "nodeType": "YulIdentifier",
                      "src": "8464:11:17"
                    }
                  ]
                }
              ]
            },
            "name": "array_storeLengthForEncoding_t_string_memory_ptr",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "8398:3:17",
                "type": ""
              },
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "8403:6:17",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "updated_pos",
                "nodeType": "YulTypedName",
                "src": "8414:11:17",
                "type": ""
              }
            ],
            "src": "8340:159:17"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8601:73:17",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "8618:3:17"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "8623:6:17"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8611:6:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8611:19:17"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8611:19:17"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "8639:29:17",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "8658:3:17"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8663:4:17",
                        "type": "",
                        "value": "0x20"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "8654:3:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8654:14:17"
                  },
                  "variableNames": [
                    {
                      "name": "updated_pos",
                      "nodeType": "YulIdentifier",
                      "src": "8639:11:17"
                    }
                  ]
                }
              ]
            },
            "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "8573:3:17",
                "type": ""
              },
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "8578:6:17",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "updated_pos",
                "nodeType": "YulTypedName",
                "src": "8589:11:17",
                "type": ""
              }
            ],
            "src": "8505:169:17"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8725:51:17",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "8735:35:17",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "8764:5:17"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint160",
                      "nodeType": "YulIdentifier",
                      "src": "8746:17:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8746:24:17"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "8735:7:17"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "8707:5:17",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "8717:7:17",
                "type": ""
              }
            ],
            "src": "8680:96:17"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8827:81:17",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "8837:65:17",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "8852:5:17"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8859:42:17",
                        "type": "",
                        "value": "0xffffffffffffffffffffffffffffffffffffffff"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "8848:3:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8848:54:17"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "8837:7:17"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_uint160",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "8809:5:17",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "8819:7:17",
                "type": ""
              }
            ],
            "src": "8782:126:17"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8959:32:17",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "8969:16:17",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "8980:5:17"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "8969:7:17"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "8941:5:17",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "8951:7:17",
                "type": ""
              }
            ],
            "src": "8914:77:17"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "9072:81:17",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "9082:65:17",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "9141:5:17"
                      }
                    ],
                    "functionName": {
                      "name": "convert_t_contract$_Ballot_$1513_to_t_uint160",
                      "nodeType": "YulIdentifier",
                      "src": "9095:45:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9095:52:17"
                  },
                  "variableNames": [
                    {
                      "name": "converted",
                      "nodeType": "YulIdentifier",
                      "src": "9082:9:17"
                    }
                  ]
                }
              ]
            },
            "name": "convert_t_contract$_Ballot_$1513_to_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "9052:5:17",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "converted",
                "nodeType": "YulTypedName",
                "src": "9062:9:17",
                "type": ""
              }
            ],
            "src": "8997:156:17"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "9234:53:17",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "9244:37:17",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "9275:5:17"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint160",
                      "nodeType": "YulIdentifier",
                      "src": "9257:17:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9257:24:17"
                  },
                  "variableNames": [
                    {
                      "name": "converted",
                      "nodeType": "YulIdentifier",
                      "src": "9244:9:17"
                    }
                  ]
                }
              ]
            },
            "name": "convert_t_contract$_Ballot_$1513_to_t_uint160",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "9214:5:17",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "converted",
                "nodeType": "YulTypedName",
                "src": "9224:9:17",
                "type": ""
              }
            ],
            "src": "9159:128:17"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "9369:82:17",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "9379:66:17",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "9439:5:17"
                      }
                    ],
                    "functionName": {
                      "name": "convert_t_contract$_Election_$616_to_t_uint160",
                      "nodeType": "YulIdentifier",
                      "src": "9392:46:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9392:53:17"
                  },
                  "variableNames": [
                    {
                      "name": "converted",
                      "nodeType": "YulIdentifier",
                      "src": "9379:9:17"
                    }
                  ]
                }
              ]
            },
            "name": "convert_t_contract$_Election_$616_to_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "9349:5:17",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "converted",
                "nodeType": "YulTypedName",
                "src": "9359:9:17",
                "type": ""
              }
            ],
            "src": "9293:158:17"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "9533:53:17",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "9543:37:17",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "9574:5:17"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint160",
                      "nodeType": "YulIdentifier",
                      "src": "9556:17:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9556:24:17"
                  },
                  "variableNames": [
                    {
                      "name": "converted",
                      "nodeType": "YulIdentifier",
                      "src": "9543:9:17"
                    }
                  ]
                }
              ]
            },
            "name": "convert_t_contract$_Election_$616_to_t_uint160",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "9513:5:17",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "converted",
                "nodeType": "YulTypedName",
                "src": "9523:9:17",
                "type": ""
              }
            ],
            "src": "9457:129:17"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "9677:91:17",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "9687:75:17",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "9756:5:17"
                      }
                    ],
                    "functionName": {
                      "name": "convert_t_contract$_ResultCalculator_$2530_to_t_uint160",
                      "nodeType": "YulIdentifier",
                      "src": "9700:55:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9700:62:17"
                  },
                  "variableNames": [
                    {
                      "name": "converted",
                      "nodeType": "YulIdentifier",
                      "src": "9687:9:17"
                    }
                  ]
                }
              ]
            },
            "name": "convert_t_contract$_ResultCalculator_$2530_to_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "9657:5:17",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "converted",
                "nodeType": "YulTypedName",
                "src": "9667:9:17",
                "type": ""
              }
            ],
            "src": "9592:176:17"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "9859:53:17",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "9869:37:17",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "9900:5:17"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint160",
                      "nodeType": "YulIdentifier",
                      "src": "9882:17:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9882:24:17"
                  },
                  "variableNames": [
                    {
                      "name": "converted",
                      "nodeType": "YulIdentifier",
                      "src": "9869:9:17"
                    }
                  ]
                }
              ]
            },
            "name": "convert_t_contract$_ResultCalculator_$2530_to_t_uint160",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "9839:5:17",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "converted",
                "nodeType": "YulTypedName",
                "src": "9849:9:17",
                "type": ""
              }
            ],
            "src": "9774:138:17"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "9969:103:17",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "dst",
                        "nodeType": "YulIdentifier",
                        "src": "9992:3:17"
                      },
                      {
                        "name": "src",
                        "nodeType": "YulIdentifier",
                        "src": "9997:3:17"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "10002:6:17"
                      }
                    ],
                    "functionName": {
                      "name": "calldatacopy",
                      "nodeType": "YulIdentifier",
                      "src": "9979:12:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9979:30:17"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9979:30:17"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dst",
                            "nodeType": "YulIdentifier",
                            "src": "10050:3:17"
                          },
                          {
                            "name": "length",
                            "nodeType": "YulIdentifier",
                            "src": "10055:6:17"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "10046:3:17"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10046:16:17"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10064:1:17",
                        "type": "",
                        "value": "0"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "10039:6:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10039:27:17"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10039:27:17"
                }
              ]
            },
            "name": "copy_calldata_to_memory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "src",
                "nodeType": "YulTypedName",
                "src": "9951:3:17",
                "type": ""
              },
              {
                "name": "dst",
                "nodeType": "YulTypedName",
                "src": "9956:3:17",
                "type": ""
              },
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "9961:6:17",
                "type": ""
              }
            ],
            "src": "9918:154:17"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "10127:258:17",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "10137:10:17",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "10146:1:17",
                    "type": "",
                    "value": "0"
                  },
                  "variables": [
                    {
                      "name": "i",
                      "nodeType": "YulTypedName",
                      "src": "10141:1:17",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "10206:63:17",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "name": "dst",
                                  "nodeType": "YulIdentifier",
                                  "src": "10231:3:17"
                                },
                                {
                                  "name": "i",
                                  "nodeType": "YulIdentifier",
                                  "src": "10236:1:17"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "10227:3:17"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "10227:11:17"
                            },
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "name": "src",
                                      "nodeType": "YulIdentifier",
                                      "src": "10250:3:17"
                                    },
                                    {
                                      "name": "i",
                                      "nodeType": "YulIdentifier",
                                      "src": "10255:1:17"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nodeType": "YulIdentifier",
                                    "src": "10246:3:17"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "10246:11:17"
                                }
                              ],
                              "functionName": {
                                "name": "mload",
                                "nodeType": "YulIdentifier",
                                "src": "10240:5:17"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "10240:18:17"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "10220:6:17"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "10220:39:17"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "10220:39:17"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "i",
                        "nodeType": "YulIdentifier",
                        "src": "10167:1:17"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "10170:6:17"
                      }
                    ],
                    "functionName": {
                      "name": "lt",
                      "nodeType": "YulIdentifier",
                      "src": "10164:2:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10164:13:17"
                  },
                  "nodeType": "YulForLoop",
                  "post": {
                    "nodeType": "YulBlock",
                    "src": "10178:19:17",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "10180:15:17",
                        "value": {
                          "arguments": [
                            {
                              "name": "i",
                              "nodeType": "YulIdentifier",
                              "src": "10189:1:17"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "10192:2:17",
                              "type": "",
                              "value": "32"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "10185:3:17"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "10185:10:17"
                        },
                        "variableNames": [
                          {
                            "name": "i",
                            "nodeType": "YulIdentifier",
                            "src": "10180:1:17"
                          }
                        ]
                      }
                    ]
                  },
                  "pre": {
                    "nodeType": "YulBlock",
                    "src": "10160:3:17",
                    "statements": []
                  },
                  "src": "10156:113:17"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "10303:76:17",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "name": "dst",
                                  "nodeType": "YulIdentifier",
                                  "src": "10353:3:17"
                                },
                                {
                                  "name": "length",
                                  "nodeType": "YulIdentifier",
                                  "src": "10358:6:17"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "10349:3:17"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "10349:16:17"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "10367:1:17",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "10342:6:17"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "10342:27:17"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "10342:27:17"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "i",
                        "nodeType": "YulIdentifier",
                        "src": "10284:1:17"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "10287:6:17"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "10281:2:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10281:13:17"
                  },
                  "nodeType": "YulIf",
                  "src": "10278:2:17"
                }
              ]
            },
            "name": "copy_memory_to_memory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "src",
                "nodeType": "YulTypedName",
                "src": "10109:3:17",
                "type": ""
              },
              {
                "name": "dst",
                "nodeType": "YulTypedName",
                "src": "10114:3:17",
                "type": ""
              },
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "10119:6:17",
                "type": ""
              }
            ],
            "src": "10078:307:17"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "10419:152:17",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10436:1:17",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10439:77:17",
                        "type": "",
                        "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "10429:6:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10429:88:17"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10429:88:17"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10533:1:17",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10536:4:17",
                        "type": "",
                        "value": "0x41"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "10526:6:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10526:15:17"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10526:15:17"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10557:1:17",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10560:4:17",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "10550:6:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10550:15:17"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10550:15:17"
                }
              ]
            },
            "name": "panic_error_0x41",
            "nodeType": "YulFunctionDefinition",
            "src": "10391:180:17"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "10625:54:17",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "10635:38:17",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "10653:5:17"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "10660:2:17",
                            "type": "",
                            "value": "31"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "10649:3:17"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10649:14:17"
                      },
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "10669:2:17",
                            "type": "",
                            "value": "31"
                          }
                        ],
                        "functionName": {
                          "name": "not",
                          "nodeType": "YulIdentifier",
                          "src": "10665:3:17"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10665:7:17"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "10645:3:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10645:28:17"
                  },
                  "variableNames": [
                    {
                      "name": "result",
                      "nodeType": "YulIdentifier",
                      "src": "10635:6:17"
                    }
                  ]
                }
              ]
            },
            "name": "round_up_to_mul_of_32",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "10608:5:17",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "result",
                "nodeType": "YulTypedName",
                "src": "10618:6:17",
                "type": ""
              }
            ],
            "src": "10577:102:17"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "10728:79:17",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "10785:16:17",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "10794:1:17",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "10797:1:17",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "10787:6:17"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "10787:12:17"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "10787:12:17"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "10751:5:17"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "10776:5:17"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_address",
                              "nodeType": "YulIdentifier",
                              "src": "10758:17:17"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "10758:24:17"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "10748:2:17"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10748:35:17"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "10741:6:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10741:43:17"
                  },
                  "nodeType": "YulIf",
                  "src": "10738:2:17"
                }
              ]
            },
            "name": "validator_revert_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "10721:5:17",
                "type": ""
              }
            ],
            "src": "10685:122:17"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "10856:79:17",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "10913:16:17",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "10922:1:17",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "10925:1:17",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "10915:6:17"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "10915:12:17"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "10915:12:17"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "10879:5:17"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "10904:5:17"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_uint256",
                              "nodeType": "YulIdentifier",
                              "src": "10886:17:17"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "10886:24:17"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "10876:2:17"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10876:35:17"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "10869:6:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10869:43:17"
                  },
                  "nodeType": "YulIf",
                  "src": "10866:2:17"
                }
              ]
            },
            "name": "validator_revert_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "10849:5:17",
                "type": ""
              }
            ],
            "src": "10813:122:17"
          }
        ]
      },
      "contents": "{\n\n    function abi_decode_available_length_t_string_memory_ptr(src, length, end) -> array {\n        array := allocateMemory(array_allocation_size_t_string_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert(0, 0) }\n        copy_calldata_to_memory(src, dst, length)\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    // string\n    function abi_decode_t_string_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_string_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    // struct Election.ElectionInfo\n    function abi_decode_t_struct$_ElectionInfo_$182_memory_ptr(headStart, end) -> value {\n        if slt(sub(end, headStart), 0xa0) { revert(0, 0) }\n        value := allocateMemory(0xa0)\n\n        {\n            // electionID\n\n            let offset := 0\n\n            mstore(add(value, 0x00), abi_decode_t_uint256(add(headStart, offset), end))\n\n        }\n\n        {\n            // name\n\n            let offset := calldataload(add(headStart, 32))\n            if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n\n            mstore(add(value, 0x20), abi_decode_t_string_memory_ptr(add(headStart, offset), end))\n\n        }\n\n        {\n            // description\n\n            let offset := calldataload(add(headStart, 64))\n            if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n\n            mstore(add(value, 0x40), abi_decode_t_string_memory_ptr(add(headStart, offset), end))\n\n        }\n\n        {\n            // startDate\n\n            let offset := 96\n\n            mstore(add(value, 0x60), abi_decode_t_uint256(add(headStart, offset), end))\n\n        }\n\n        {\n            // endDate\n\n            let offset := 128\n\n            mstore(add(value, 0x80), abi_decode_t_uint256(add(headStart, offset), end))\n\n        }\n\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_struct$_ElectionInfo_$182_memory_ptrt_uint256t_uint256t_addresst_address(headStart, dataEnd) -> value0, value1, value2, value3, value4 {\n        if slt(sub(dataEnd, headStart), 160) { revert(0, 0) }\n\n        {\n\n            let offset := calldataload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n\n            value0 := abi_decode_t_struct$_ElectionInfo_$182_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 96\n\n            value3 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 128\n\n            value4 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_t_contract$_Ballot_$1513_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_Ballot_$1513_to_t_address(value))\n    }\n\n    function abi_encode_t_contract$_Election_$616_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_Election_$616_to_t_address(value))\n    }\n\n    function abi_encode_t_contract$_ResultCalculator_$2530_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_ResultCalculator_$2530_to_t_address(value))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr(pos, length)\n        copy_memory_to_memory(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_t_stringliteral_3ded520295abd6caf5a70c9a0e862cc0aa60e5779e1334dc488e24512bd6574c_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 51)\n\n        mstore(add(pos, 0), \"Must be called from the election\")\n\n        mstore(add(pos, 32), \" organizer contract\")\n\n        end := add(pos, 64)\n    }\n\n    // struct Election.ElectionInfo -> struct Election.ElectionInfo\n    function abi_encode_t_struct$_ElectionInfo_$182_memory_ptr_to_t_struct$_ElectionInfo_$182_memory_ptr_fromStack(value, pos)  -> end  {\n        let tail := add(pos, 0xa0)\n\n        {\n            // electionID\n\n            let memberValue0 := mload(add(value, 0x00))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0x00))\n        }\n\n        {\n            // name\n\n            let memberValue0 := mload(add(value, 0x20))\n\n            mstore(add(pos, 0x20), sub(tail, pos))\n            tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr(memberValue0, tail)\n\n        }\n\n        {\n            // description\n\n            let memberValue0 := mload(add(value, 0x40))\n\n            mstore(add(pos, 0x40), sub(tail, pos))\n            tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr(memberValue0, tail)\n\n        }\n\n        {\n            // startDate\n\n            let memberValue0 := mload(add(value, 0x60))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0x60))\n        }\n\n        {\n            // endDate\n\n            let memberValue0 := mload(add(value, 0x80))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0x80))\n        }\n\n        end := tail\n    }\n\n    function abi_encode_t_uint256_to_t_uint256(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_contract$_Election_$616__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_contract$_Election_$616_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_3ded520295abd6caf5a70c9a0e862cc0aa60e5779e1334dc488e24512bd6574c__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_3ded520295abd6caf5a70c9a0e862cc0aa60e5779e1334dc488e24512bd6574c_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_struct$_ElectionInfo_$182_memory_ptr_t_contract$_Ballot_$1513_t_contract$_ResultCalculator_$2530_t_address_t_address__to_t_struct$_ElectionInfo_$182_memory_ptr_t_address_t_address_t_address_t_address__fromStack_reversed(headStart , value4, value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 160)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_struct$_ElectionInfo_$182_memory_ptr_to_t_struct$_ElectionInfo_$182_memory_ptr_fromStack(value0,  tail)\n\n        abi_encode_t_contract$_Ballot_$1513_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_contract$_ResultCalculator_$2530_to_t_address_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_address_to_t_address_fromStack(value3,  add(headStart, 96))\n\n        abi_encode_t_address_to_t_address_fromStack(value4,  add(headStart, 128))\n\n    }\n\n    function allocateMemory(size) -> memPtr {\n        memPtr := mload(64)\n        let newFreePtr := add(memPtr, size)\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function array_allocation_size_t_string_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        // round up\n        size := and(add(length, 0x1f), not(0x1f))\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function convert_t_contract$_Ballot_$1513_to_t_address(value) -> converted {\n        converted := convert_t_contract$_Ballot_$1513_to_t_uint160(value)\n    }\n\n    function convert_t_contract$_Ballot_$1513_to_t_uint160(value) -> converted {\n        converted := cleanup_t_uint160(value)\n    }\n\n    function convert_t_contract$_Election_$616_to_t_address(value) -> converted {\n        converted := convert_t_contract$_Election_$616_to_t_uint160(value)\n    }\n\n    function convert_t_contract$_Election_$616_to_t_uint160(value) -> converted {\n        converted := cleanup_t_uint160(value)\n    }\n\n    function convert_t_contract$_ResultCalculator_$2530_to_t_address(value) -> converted {\n        converted := convert_t_contract$_ResultCalculator_$2530_to_t_uint160(value)\n    }\n\n    function convert_t_contract$_ResultCalculator_$2530_to_t_uint160(value) -> converted {\n        converted := cleanup_t_uint160(value)\n    }\n\n    function copy_calldata_to_memory(src, dst, length) {\n        calldatacopy(dst, src, length)\n        // clear end\n        mstore(add(dst, length), 0)\n    }\n\n    function copy_memory_to_memory(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        if gt(i, length)\n        {\n            // clear end\n            mstore(add(dst, length), 0)\n        }\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n}\n",
      "id": 17,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "sourceMap": "554:5743:3:-:0;;;1981:69;;;;;;;;;;2033:10;2005:25;;:38;;;;;;;;;;;;;;;;;;554:5743;;;;;;",
  "deployedSourceMap": "554:5743:3:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3018:498;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;;3232:8;1592:25;;;;;;;;;;;1578:39;;:10;:39;;;1570:102;;;;;;;;;;;;:::i;:::-;;;;;;;;;3252:17:::1;3279:22;3289:11;3279:9;:22::i;:::-;;3311:55;3331:11;3344:21;3311:19;:55::i;:::-;;3400:13;3414:6;::::0;::::1;;;;;;;;3421:16;;;;;;;;;;;3438:18;3457:26;3387:97;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;3376:108;;3501:8;3494:15;;;3018:498:::0;;;;;;;:::o;3522:712::-;3576:6;3784:1;3769:11;:16;3765:439;;;3810:19;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;3801:6;;:28;;;;;;;;;;;;;;;;;;3765:439;;;3873:1;3858:11;:16;3854:350;;;3899:22;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;3890:6;;:31;;;;;;;;;;;;;;;;;;3854:350;;;3965:1;3950:11;:16;3946:258;;;;;;4055:1;4040:11;:16;4036:168;;;4081:17;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;4072:6;;:26;;;;;;;;;;;;;;;;;;4036:168;;;4174:19;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;4165:6;;:28;;;;;;;;;;;;;;;;;;4036:168;3946:258;3854:350;3765:439;4221:6;;;;;;;;;;4214:13;;3522:712;;;:::o;4240:756::-;4332:16;4404:1;4389:11;:16;4385:571;;;4421:49;4448:21;4421:26;:49::i;:::-;4385:571;;;4542:1;4527:11;:16;4523:433;;;4559:52;4589:21;4559:29;:52::i;:::-;4523:433;;;4678:1;4663:11;:16;4659:297;;;4695:47;4720:21;4695:24;:47::i;:::-;4659:297;;;4786:1;4771:11;:16;4767:189;;;4803:26;:24;:26::i;:::-;4767:189;;;4896:49;4923:21;4896:26;:49::i;:::-;4767:189;4659:297;4523:433;4385:571;4973:16;;;;;;;;;;;4966:23;;4240:756;;;;:::o;5157:332::-;5283:1;5251:28;:33;5247:236;;;5319:20;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;5300:16;;:39;;;;;;;;;;;;;;;;;;5247:236;;;5452:20;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;5433:16;;:39;;;;;;;;;;;;;;;;;;5247:236;5157:332;:::o;5540:::-;5675:1;5640:31;:36;5636:230;;;5711:14;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;5692:16;;:33;;;;;;;;;;;;;;;;;;5636:230;;;5841:14;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;5822:16;;:33;;;;;;;;;;;;;;;;;;5636:230;5540:332;:::o;5918:341::-;;:::o;5002:107::-;5082:17;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;5063:16;;:36;;;;;;;;;;;;;;;;;;5002:107::o;-1:-1:-1:-;;;;;;;;:::o;:::-;;;;;;;;:::o;:::-;;;;;;;;:::o;:::-;;;;;;;;:::o;:::-;;;;;;;;:::o;:::-;;;;;;;;:::o;:::-;;;;;;;;:::o;7:344:17:-;;110:65;125:49;167:6;125:49;:::i;:::-;110:65;:::i;:::-;101:74;;198:6;191:5;184:21;236:4;229:5;225:16;274:3;265:6;260:3;256:16;253:25;250:2;;;291:1;288;281:12;250:2;304:41;338:6;333:3;328;304:41;:::i;:::-;91:260;;;;;;:::o;357:139::-;;441:6;428:20;419:29;;457:33;484:5;457:33;:::i;:::-;409:87;;;;:::o;516:273::-;;621:3;614:4;606:6;602:17;598:27;588:2;;639:1;636;629:12;588:2;679:6;666:20;704:79;779:3;771:6;764:4;756:6;752:17;704:79;:::i;:::-;695:88;;578:211;;;;;:::o;831:1221::-;;953:4;941:9;936:3;932:19;928:30;925:2;;;971:1;968;961:12;925:2;993:20;1008:4;993:20;:::i;:::-;984:29;;1078:1;1118:49;1163:3;1154:6;1143:9;1139:22;1118:49;:::i;:::-;1111:4;1104:5;1100:16;1093:75;1023:156;1266:2;1255:9;1251:18;1238:32;1297:18;1289:6;1286:30;1283:2;;;1329:1;1326;1319:12;1283:2;1372:59;1427:3;1418:6;1407:9;1403:22;1372:59;:::i;:::-;1365:4;1358:5;1354:16;1347:85;1189:254;1537:2;1526:9;1522:18;1509:32;1568:18;1560:6;1557:30;1554:2;;;1600:1;1597;1590:12;1554:2;1643:59;1698:3;1689:6;1678:9;1674:22;1643:59;:::i;:::-;1636:4;1629:5;1625:16;1618:85;1453:261;1778:2;1819:49;1864:3;1855:6;1844:9;1840:22;1819:49;:::i;:::-;1812:4;1805:5;1801:16;1794:75;1724:156;1942:3;1984:49;2029:3;2020:6;2009:9;2005:22;1984:49;:::i;:::-;1977:4;1970:5;1966:16;1959:75;1890:155;915:1137;;;;:::o;2058:139::-;;2142:6;2129:20;2120:29;;2158:33;2185:5;2158:33;:::i;:::-;2110:87;;;;:::o;2203:995::-;;;;;;2408:3;2396:9;2387:7;2383:23;2379:33;2376:2;;;2425:1;2422;2415:12;2376:2;2496:1;2485:9;2481:17;2468:31;2526:18;2518:6;2515:30;2512:2;;;2558:1;2555;2548:12;2512:2;2586:82;2660:7;2651:6;2640:9;2636:22;2586:82;:::i;:::-;2576:92;;2439:239;2717:2;2743:53;2788:7;2779:6;2768:9;2764:22;2743:53;:::i;:::-;2733:63;;2688:118;2845:2;2871:53;2916:7;2907:6;2896:9;2892:22;2871:53;:::i;:::-;2861:63;;2816:118;2973:2;2999:53;3044:7;3035:6;3024:9;3020:22;2999:53;:::i;:::-;2989:63;;2944:118;3101:3;3128:53;3173:7;3164:6;3153:9;3149:22;3128:53;:::i;:::-;3118:63;;3072:119;2366:832;;;;;;;;:::o;3204:118::-;3291:24;3309:5;3291:24;:::i;:::-;3286:3;3279:37;3269:53;;:::o;3328:161::-;3430:52;3476:5;3430:52;:::i;:::-;3425:3;3418:65;3408:81;;:::o;3495:163::-;3598:53;3645:5;3598:53;:::i;:::-;3593:3;3586:66;3576:82;;:::o;3664:181::-;3776:62;3832:5;3776:62;:::i;:::-;3771:3;3764:75;3754:91;;:::o;3851:344::-;;3957:39;3990:5;3957:39;:::i;:::-;4012:61;4066:6;4061:3;4012:61;:::i;:::-;4005:68;;4082:52;4127:6;4122:3;4115:4;4108:5;4104:16;4082:52;:::i;:::-;4159:29;4181:6;4159:29;:::i;:::-;4154:3;4150:39;4143:46;;3933:262;;;;;:::o;4201:383::-;;4364:67;4428:2;4423:3;4364:67;:::i;:::-;4357:74;;4461:34;4457:1;4452:3;4448:11;4441:55;4527:21;4522:2;4517:3;4513:12;4506:43;4575:2;4570:3;4566:12;4559:19;;4347:237;;;:::o;4658:1228::-;;4821:4;4816:3;4812:14;4914:4;4907:5;4903:16;4897:23;4933:63;4990:4;4985:3;4981:14;4967:12;4933:63;:::i;:::-;4836:170;5088:4;5081:5;5077:16;5071:23;5141:3;5135:4;5131:14;5124:4;5119:3;5115:14;5108:38;5167:73;5235:4;5221:12;5167:73;:::i;:::-;5159:81;;5016:235;5340:4;5333:5;5329:16;5323:23;5393:3;5387:4;5383:14;5376:4;5371:3;5367:14;5360:38;5419:73;5487:4;5473:12;5419:73;:::i;:::-;5411:81;;5261:242;5590:4;5583:5;5579:16;5573:23;5609:63;5666:4;5661:3;5657:14;5643:12;5609:63;:::i;:::-;5513:169;5767:4;5760:5;5756:16;5750:23;5786:63;5843:4;5838:3;5834:14;5820:12;5786:63;:::i;:::-;5692:167;5876:4;5869:11;;4790:1096;;;;;:::o;5892:108::-;5969:24;5987:5;5969:24;:::i;:::-;5964:3;5957:37;5947:53;;:::o;6006:254::-;;6153:2;6142:9;6138:18;6130:26;;6166:87;6250:1;6239:9;6235:17;6226:6;6166:87;:::i;:::-;6120:140;;;;:::o;6266:419::-;;6470:2;6459:9;6455:18;6447:26;;6519:9;6513:4;6509:20;6505:1;6494:9;6490:17;6483:47;6547:131;6673:4;6547:131;:::i;:::-;6539:139;;6437:248;;;:::o;6691:911::-;;7032:3;7021:9;7017:19;7009:27;;7082:9;7076:4;7072:20;7068:1;7057:9;7053:17;7046:47;7110:116;7221:4;7212:6;7110:116;:::i;:::-;7102:124;;7236:87;7319:2;7308:9;7304:18;7295:6;7236:87;:::i;:::-;7333:97;7426:2;7415:9;7411:18;7402:6;7333:97;:::i;:::-;7440:72;7508:2;7497:9;7493:18;7484:6;7440:72;:::i;:::-;7522:73;7590:3;7579:9;7575:19;7566:6;7522:73;:::i;:::-;6999:603;;;;;;;;:::o;7608:283::-;;7674:2;7668:9;7658:19;;7716:4;7708:6;7704:17;7823:6;7811:10;7808:22;7787:18;7775:10;7772:34;7769:62;7766:2;;;7834:18;;:::i;:::-;7766:2;7874:10;7870:2;7863:22;7648:243;;;;:::o;7897:332::-;;8049:18;8041:6;8038:30;8035:2;;;8071:18;;:::i;:::-;8035:2;8156:4;8152:9;8145:4;8137:6;8133:17;8129:33;8121:41;;8217:4;8211;8207:15;8199:23;;7964:265;;;:::o;8235:99::-;;8321:5;8315:12;8305:22;;8294:40;;;:::o;8340:159::-;;8448:6;8443:3;8436:19;8488:4;8483:3;8479:14;8464:29;;8426:73;;;;:::o;8505:169::-;;8623:6;8618:3;8611:19;8663:4;8658:3;8654:14;8639:29;;8601:73;;;;:::o;8680:96::-;;8746:24;8764:5;8746:24;:::i;:::-;8735:35;;8725:51;;;:::o;8782:126::-;;8859:42;8852:5;8848:54;8837:65;;8827:81;;;:::o;8914:77::-;;8980:5;8969:16;;8959:32;;;:::o;8997:156::-;;9095:52;9141:5;9095:52;:::i;:::-;9082:65;;9072:81;;;:::o;9159:128::-;;9257:24;9275:5;9257:24;:::i;:::-;9244:37;;9234:53;;;:::o;9293:158::-;;9392:53;9439:5;9392:53;:::i;:::-;9379:66;;9369:82;;;:::o;9457:129::-;;9556:24;9574:5;9556:24;:::i;:::-;9543:37;;9533:53;;;:::o;9592:176::-;;9700:62;9756:5;9700:62;:::i;:::-;9687:75;;9677:91;;;:::o;9774:138::-;;9882:24;9900:5;9882:24;:::i;:::-;9869:37;;9859:53;;;:::o;9918:154::-;10002:6;9997:3;9992;9979:30;10064:1;10055:6;10050:3;10046:16;10039:27;9969:103;;;:::o;10078:307::-;10146:1;10156:113;10170:6;10167:1;10164:13;10156:113;;;10255:1;10250:3;10246:11;10240:18;10236:1;10231:3;10227:11;10220:39;10192:2;10189:1;10185:10;10180:15;;10156:113;;;10287:6;10284:1;10281:13;10278:2;;;10367:1;10358:6;10353:3;10349:16;10342:27;10278:2;10127:258;;;;:::o;10391:180::-;10439:77;10436:1;10429:88;10536:4;10533:1;10526:15;10560:4;10557:1;10550:15;10577:102;;10669:2;10665:7;10660:2;10653:5;10649:14;10645:28;10635:38;;10625:54;;;:::o;10685:122::-;10758:24;10776:5;10758:24;:::i;:::-;10751:5;10748:35;10738:2;;10797:1;10794;10787:12;10738:2;10728:79;:::o;10813:122::-;10886:24;10904:5;10886:24;:::i;:::-;10879:5;10876:35;10866:2;;10925:1;10922;10915:12;10866:2;10856:79;:::o",
  "source": "// SPDX-License-Identifier: UNLICENSED\npragma solidity >=0.8.0;\n\nimport './Election.sol';\n\n// Import Ballots\nimport './ballot/Ballot.sol';\nimport './ballot/GeneralBallot.sol';\nimport './ballot/PreferenceBallot.sol';\nimport './ballot/BordaBallot.sol';\n\n// import './ballot/ScoreBallot.sol';\n// New Ballots here\n\n//Import ResultCalculators\nimport './resultCalculator/ResultCalculator.sol';\nimport './resultCalculator/GeneralResults.sol';\nimport './resultCalculator/Oklahoma.sol';\nimport './resultCalculator/BordaResult.sol';\n// New ResultCalculators here\n\ncontract ElectionFactory {\n\n    // ------------------------------------------------------------------------------------------------------\n    //                                          DEPENDENCIES\n    // ------------------------------------------------------------------------------------------------------\n\n    Ballot ballot;\n    ResultCalculator resultCalculator;\n\n    // ------------------------------------------------------------------------------------------------------\n    //                                              STATE\n    // ------------------------------------------------------------------------------------------------------\n\n    address electionOrganizerContract;\n\n    // ------------------------------------------------------------------------------------------------------\n    //                                            MODIFIERS\n    // ------------------------------------------------------------------------------------------------------\n\n    modifier onlyOrganizerContract() {\n        require(msg.sender == electionOrganizerContract,\"Must be called from the election organizer contract\");\n        _;\n    }  \n\n    // ------------------------------------------------------------------------------------------------------\n    //                                            CONSTRUCTOR\n    // ------------------------------------------------------------------------------------------------------\n\n    constructor() {\n        electionOrganizerContract = msg.sender;\n    }\n\n    /*\n        Each ballot has specific result calculation algorithms\n        So the algorithms specific to the ballots are indexed from 1\n         \n            For GeneralBallot, say there are algorithms: GeneralResults and Moore\n            GeneralResults would be 1\n            Moore would be 2\n\n            For PreferenceBallot, now Oklahoma would be 1 again\n\n        Ballot Types and ResultCalcultors\n\n            1 : GeneralBallot\n                1 : GeneralResults\n                2 : Moore\n            \n            2 : PreferenceBallot\n                1 : Oklahoma\n            \n            3 : ScoreBallot\n\n            // add new Ballots and ResultCalculators here\n    */\n\n    // ------------------------------------------------------------------------------------------------------\n    //                                            FUNCTIONS\n    // ------------------------------------------------------------------------------------------------------\n\n    function getElection(Election.ElectionInfo memory _electionInfo, uint _ballotType, uint _resultCalculatorType, address _electionOrganizer, address _electionOrganizerContract) external onlyOrganizerContract returns(Election) {\n        Election election;\n        getBallot(_ballotType);\n        getResultCalculator(_ballotType, _resultCalculatorType);\n        election = new Election(_electionInfo,ballot,resultCalculator,_electionOrganizer,_electionOrganizerContract);\n        return election;\n    }\n\n    function getBallot(uint _ballotType) internal returns(Ballot) {\n        /*\n            1: GenralBallot\n            2: PreferenceBallot\n            3: ScoreBallot\n            // new Ballots\n            default: GeneralBallot\n        */\n        if (_ballotType == 1) {\n            ballot = new GeneralBallot();\n        }\n        else if (_ballotType == 2) {\n            ballot = new PreferenceBallot();\n        }\n        else if (_ballotType == 3) {\n            // ballot = new ScoreBallot();\n        }\n        else if (_ballotType == 4) {\n            ballot = new BordaBallot();\n        }\n        // New Ballots here\n        else {\n            ballot = new GeneralBallot();\n        }\n\n        return ballot;\n    }\n\n    function getResultCalculator(uint _ballotType, uint _resultCalculatorType) internal returns(ResultCalculator) {\n        // GeneralBallot\n        if (_ballotType == 1) {\n            getGeneralResultCalculator(_resultCalculatorType);\n        }\n        // PreferenceBallot\n        else if (_ballotType == 2) {\n            getPreferenceResultCalculator(_resultCalculatorType);\n        }\n        // ScoreBallot\n        else if (_ballotType == 3) {\n            getScoreResultCalculator(_resultCalculatorType);\n        }\n        else if (_ballotType == 4) {\n            getBordaResultCalculator();\n        }\n        // New Ballots here\n        else {\n            getGeneralResultCalculator(_resultCalculatorType);\n        }\n\n        return resultCalculator;\n    }\n\n    function getBordaResultCalculator() internal {  \n            resultCalculator = new BordaResult();\n       }\n\n    // ResultCalculator for GeneralBallot\n    function getGeneralResultCalculator(uint _generalResultCalculatorType) internal {\n        if (_generalResultCalculatorType == 1) {\n            resultCalculator = new GeneralResults();\n        }\n        // new ResultCalculator for GeneralBallot here\n        else {\n            resultCalculator = new GeneralResults();\n        }\n    }\n\n    // ResultCalculator for PreferenceBallot\n    function getPreferenceResultCalculator(uint _preferenceResultCalculatorType) internal {\n        if (_preferenceResultCalculatorType == 1) {\n            resultCalculator = new Oklahoma();\n        }\n        // new ResultCalculator for PreferenceBallot here\n        else {\n            resultCalculator = new Oklahoma();\n        }\n    }\n\n    // ResultCalculator for ScoreBallot\n    function getScoreResultCalculator(uint _scoreResultCalculatorType) internal {\n        // if (_scoreResultCalculatorType == 1) {\n        //     resultCalculator = new ScoreResults();\n        // }\n        // // new ResultCalculator for ScoreBallot here\n        // else {\n        //     resultCalculator = new ScoreResults();\n        // }\n    }\n\n    // New ResultCalculators here\n\n}",
  "sourcePath": "/Users/harsh/Desktop/projects/agora-blockchain/server/contracts/ElectionFactory.sol",
  "ast": {
    "absolutePath": "project:/contracts/ElectionFactory.sol",
    "exportedSymbols": {
      "Ballot": [
        1513
      ],
      "BordaBallot": [
        1618
      ],
      "BordaResult": [
        2166
      ],
      "Election": [
        616
      ],
      "ElectionFactory": [
        886
      ],
      "GeneralBallot": [
        1696
      ],
      "GeneralResults": [
        2307
      ],
      "Oklahoma": [
        2515
      ],
      "PreferenceBallot": [
        1834
      ],
      "ResultCalculator": [
        2530
      ]
    },
    "id": 887,
    "license": "UNLICENSED",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 618,
        "literals": [
          "solidity",
          ">=",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "39:24:3"
      },
      {
        "absolutePath": "project:/contracts/Election.sol",
        "file": "./Election.sol",
        "id": 619,
        "nodeType": "ImportDirective",
        "scope": 887,
        "sourceUnit": 617,
        "src": "65:24:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/ballot/Ballot.sol",
        "file": "./ballot/Ballot.sol",
        "id": 620,
        "nodeType": "ImportDirective",
        "scope": 887,
        "sourceUnit": 1514,
        "src": "109:29:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/ballot/GeneralBallot.sol",
        "file": "./ballot/GeneralBallot.sol",
        "id": 621,
        "nodeType": "ImportDirective",
        "scope": 887,
        "sourceUnit": 1697,
        "src": "139:36:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/ballot/PreferenceBallot.sol",
        "file": "./ballot/PreferenceBallot.sol",
        "id": 622,
        "nodeType": "ImportDirective",
        "scope": 887,
        "sourceUnit": 1835,
        "src": "176:39:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/ballot/BordaBallot.sol",
        "file": "./ballot/BordaBallot.sol",
        "id": 623,
        "nodeType": "ImportDirective",
        "scope": 887,
        "sourceUnit": 1619,
        "src": "216:34:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/resultCalculator/ResultCalculator.sol",
        "file": "./resultCalculator/ResultCalculator.sol",
        "id": 624,
        "nodeType": "ImportDirective",
        "scope": 887,
        "sourceUnit": 2531,
        "src": "338:49:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/resultCalculator/GeneralResults.sol",
        "file": "./resultCalculator/GeneralResults.sol",
        "id": 625,
        "nodeType": "ImportDirective",
        "scope": 887,
        "sourceUnit": 2308,
        "src": "388:47:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/resultCalculator/Oklahoma.sol",
        "file": "./resultCalculator/Oklahoma.sol",
        "id": 626,
        "nodeType": "ImportDirective",
        "scope": 887,
        "sourceUnit": 2516,
        "src": "436:41:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/resultCalculator/BordaResult.sol",
        "file": "./resultCalculator/BordaResult.sol",
        "id": 627,
        "nodeType": "ImportDirective",
        "scope": 887,
        "sourceUnit": 2167,
        "src": "478:44:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [],
        "contractDependencies": [
          616,
          1618,
          1696,
          1834,
          2166,
          2307,
          2515
        ],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 886,
        "linearizedBaseContracts": [
          886
        ],
        "name": "ElectionFactory",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 630,
            "mutability": "mutable",
            "name": "ballot",
            "nodeType": "VariableDeclaration",
            "scope": 886,
            "src": "868:13:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_Ballot_$1513",
              "typeString": "contract Ballot"
            },
            "typeName": {
              "id": 629,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 628,
                "name": "Ballot",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 1513,
                "src": "868:6:3"
              },
              "referencedDeclaration": 1513,
              "src": "868:6:3",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Ballot_$1513",
                "typeString": "contract Ballot"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 633,
            "mutability": "mutable",
            "name": "resultCalculator",
            "nodeType": "VariableDeclaration",
            "scope": 886,
            "src": "887:33:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_ResultCalculator_$2530",
              "typeString": "contract ResultCalculator"
            },
            "typeName": {
              "id": 632,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 631,
                "name": "ResultCalculator",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 2530,
                "src": "887:16:3"
              },
              "referencedDeclaration": 2530,
              "src": "887:16:3",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ResultCalculator_$2530",
                "typeString": "contract ResultCalculator"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 635,
            "mutability": "mutable",
            "name": "electionOrganizerContract",
            "nodeType": "VariableDeclaration",
            "scope": 886,
            "src": "1206:33:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 634,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "1206:7:3",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "internal"
          },
          {
            "body": {
              "id": 646,
              "nodeType": "Block",
              "src": "1560:130:3",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 641,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 638,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "1578:3:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 639,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "1578:10:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 640,
                          "name": "electionOrganizerContract",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 635,
                          "src": "1592:25:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "1578:39:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4d7573742062652063616c6c65642066726f6d2074686520656c656374696f6e206f7267616e697a657220636f6e7472616374",
                        "id": 642,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1618:53:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_3ded520295abd6caf5a70c9a0e862cc0aa60e5779e1334dc488e24512bd6574c",
                          "typeString": "literal_string \"Must be called from the election organizer contract\""
                        },
                        "value": "Must be called from the election organizer contract"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_3ded520295abd6caf5a70c9a0e862cc0aa60e5779e1334dc488e24512bd6574c",
                          "typeString": "literal_string \"Must be called from the election organizer contract\""
                        }
                      ],
                      "id": 637,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1570:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 643,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1570:102:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 644,
                  "nodeType": "ExpressionStatement",
                  "src": "1570:102:3"
                },
                {
                  "id": 645,
                  "nodeType": "PlaceholderStatement",
                  "src": "1682:1:3"
                }
              ]
            },
            "id": 647,
            "name": "onlyOrganizerContract",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 636,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1557:2:3"
            },
            "src": "1527:163:3",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 655,
              "nodeType": "Block",
              "src": "1995:55:3",
              "statements": [
                {
                  "expression": {
                    "id": 653,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 650,
                      "name": "electionOrganizerContract",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 635,
                      "src": "2005:25:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 651,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967281,
                        "src": "2033:3:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 652,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "2033:10:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "2005:38:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 654,
                  "nodeType": "ExpressionStatement",
                  "src": "2005:38:3"
                }
              ]
            },
            "id": 656,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 648,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1992:2:3"
            },
            "returnParameters": {
              "id": 649,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1995:0:3"
            },
            "scope": 886,
            "src": "1981:69:3",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 702,
              "nodeType": "Block",
              "src": "3242:274:3",
              "statements": [
                {
                  "assignments": [
                    677
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 677,
                      "mutability": "mutable",
                      "name": "election",
                      "nodeType": "VariableDeclaration",
                      "scope": 702,
                      "src": "3252:17:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Election_$616",
                        "typeString": "contract Election"
                      },
                      "typeName": {
                        "id": 676,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 675,
                          "name": "Election",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 616,
                          "src": "3252:8:3"
                        },
                        "referencedDeclaration": 616,
                        "src": "3252:8:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Election_$616",
                          "typeString": "contract Election"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 678,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3252:17:3"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 680,
                        "name": "_ballotType",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 661,
                        "src": "3289:11:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 679,
                      "name": "getBallot",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 763,
                      "src": "3279:9:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$_t_contract$_Ballot_$1513_$",
                        "typeString": "function (uint256) returns (contract Ballot)"
                      }
                    },
                    "id": 681,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3279:22:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Ballot_$1513",
                      "typeString": "contract Ballot"
                    }
                  },
                  "id": 682,
                  "nodeType": "ExpressionStatement",
                  "src": "3279:22:3"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 684,
                        "name": "_ballotType",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 661,
                        "src": "3331:11:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 685,
                        "name": "_resultCalculatorType",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 663,
                        "src": "3344:21:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 683,
                      "name": "getResultCalculator",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 816,
                      "src": "3311:19:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$_t_contract$_ResultCalculator_$2530_$",
                        "typeString": "function (uint256,uint256) returns (contract ResultCalculator)"
                      }
                    },
                    "id": 686,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3311:55:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ResultCalculator_$2530",
                      "typeString": "contract ResultCalculator"
                    }
                  },
                  "id": 687,
                  "nodeType": "ExpressionStatement",
                  "src": "3311:55:3"
                },
                {
                  "expression": {
                    "id": 698,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 688,
                      "name": "election",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 677,
                      "src": "3376:8:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Election_$616",
                        "typeString": "contract Election"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 692,
                          "name": "_electionInfo",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 659,
                          "src": "3400:13:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_ElectionInfo_$182_memory_ptr",
                            "typeString": "struct Election.ElectionInfo memory"
                          }
                        },
                        {
                          "id": 693,
                          "name": "ballot",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 630,
                          "src": "3414:6:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_Ballot_$1513",
                            "typeString": "contract Ballot"
                          }
                        },
                        {
                          "id": 694,
                          "name": "resultCalculator",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 633,
                          "src": "3421:16:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ResultCalculator_$2530",
                            "typeString": "contract ResultCalculator"
                          }
                        },
                        {
                          "id": 695,
                          "name": "_electionOrganizer",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 665,
                          "src": "3438:18:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "id": 696,
                          "name": "_electionOrganizerContract",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 667,
                          "src": "3457:26:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_struct$_ElectionInfo_$182_memory_ptr",
                            "typeString": "struct Election.ElectionInfo memory"
                          },
                          {
                            "typeIdentifier": "t_contract$_Ballot_$1513",
                            "typeString": "contract Ballot"
                          },
                          {
                            "typeIdentifier": "t_contract$_ResultCalculator_$2530",
                            "typeString": "contract ResultCalculator"
                          },
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 691,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "3387:12:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_creation_nonpayable$_t_struct$_ElectionInfo_$182_memory_ptr_$_t_contract$_Ballot_$1513_$_t_contract$_ResultCalculator_$2530_$_t_address_$_t_address_$returns$_t_contract$_Election_$616_$",
                          "typeString": "function (struct Election.ElectionInfo memory,contract Ballot,contract ResultCalculator,address,address) returns (contract Election)"
                        },
                        "typeName": {
                          "id": 690,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 689,
                            "name": "Election",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 616,
                            "src": "3391:8:3"
                          },
                          "referencedDeclaration": 616,
                          "src": "3391:8:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_Election_$616",
                            "typeString": "contract Election"
                          }
                        }
                      },
                      "id": 697,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3387:97:3",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Election_$616",
                        "typeString": "contract Election"
                      }
                    },
                    "src": "3376:108:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Election_$616",
                      "typeString": "contract Election"
                    }
                  },
                  "id": 699,
                  "nodeType": "ExpressionStatement",
                  "src": "3376:108:3"
                },
                {
                  "expression": {
                    "id": 700,
                    "name": "election",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 677,
                    "src": "3501:8:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Election_$616",
                      "typeString": "contract Election"
                    }
                  },
                  "functionReturnParameters": 674,
                  "id": 701,
                  "nodeType": "Return",
                  "src": "3494:15:3"
                }
              ]
            },
            "functionSelector": "1140fc19",
            "id": 703,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 670,
                "modifierName": {
                  "id": 669,
                  "name": "onlyOrganizerContract",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 647,
                  "src": "3202:21:3"
                },
                "nodeType": "ModifierInvocation",
                "src": "3202:21:3"
              }
            ],
            "name": "getElection",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 668,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 659,
                  "mutability": "mutable",
                  "name": "_electionInfo",
                  "nodeType": "VariableDeclaration",
                  "scope": 703,
                  "src": "3039:42:3",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_ElectionInfo_$182_memory_ptr",
                    "typeString": "struct Election.ElectionInfo"
                  },
                  "typeName": {
                    "id": 658,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 657,
                      "name": "Election.ElectionInfo",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 182,
                      "src": "3039:21:3"
                    },
                    "referencedDeclaration": 182,
                    "src": "3039:21:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_ElectionInfo_$182_storage_ptr",
                      "typeString": "struct Election.ElectionInfo"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 661,
                  "mutability": "mutable",
                  "name": "_ballotType",
                  "nodeType": "VariableDeclaration",
                  "scope": 703,
                  "src": "3083:16:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 660,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "3083:4:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 663,
                  "mutability": "mutable",
                  "name": "_resultCalculatorType",
                  "nodeType": "VariableDeclaration",
                  "scope": 703,
                  "src": "3101:26:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 662,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "3101:4:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 665,
                  "mutability": "mutable",
                  "name": "_electionOrganizer",
                  "nodeType": "VariableDeclaration",
                  "scope": 703,
                  "src": "3129:26:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 664,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3129:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 667,
                  "mutability": "mutable",
                  "name": "_electionOrganizerContract",
                  "nodeType": "VariableDeclaration",
                  "scope": 703,
                  "src": "3157:34:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 666,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3157:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3038:154:3"
            },
            "returnParameters": {
              "id": 674,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 673,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 703,
                  "src": "3232:8:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_Election_$616",
                    "typeString": "contract Election"
                  },
                  "typeName": {
                    "id": 672,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 671,
                      "name": "Election",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 616,
                      "src": "3232:8:3"
                    },
                    "referencedDeclaration": 616,
                    "src": "3232:8:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Election_$616",
                      "typeString": "contract Election"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3231:10:3"
            },
            "scope": 886,
            "src": "3018:498:3",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 762,
              "nodeType": "Block",
              "src": "3584:650:3",
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 713,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 711,
                      "name": "_ballotType",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 705,
                      "src": "3769:11:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "hexValue": "31",
                      "id": 712,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3784:1:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "src": "3769:16:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "condition": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 724,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 722,
                        "name": "_ballotType",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 705,
                        "src": "3858:11:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "hexValue": "32",
                        "id": 723,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3873:1:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_2_by_1",
                          "typeString": "int_const 2"
                        },
                        "value": "2"
                      },
                      "src": "3858:16:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "falseBody": {
                      "condition": {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 735,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 733,
                          "name": "_ballotType",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 705,
                          "src": "3950:11:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "33",
                          "id": 734,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3965:1:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_3_by_1",
                            "typeString": "int_const 3"
                          },
                          "value": "3"
                        },
                        "src": "3950:16:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "falseBody": {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 739,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 737,
                            "name": "_ballotType",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 705,
                            "src": "4040:11:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "hexValue": "34",
                            "id": 738,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "4055:1:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_4_by_1",
                              "typeString": "int_const 4"
                            },
                            "value": "4"
                          },
                          "src": "4040:16:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": {
                          "id": 755,
                          "nodeType": "Block",
                          "src": "4151:53:3",
                          "statements": [
                            {
                              "expression": {
                                "id": 753,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "id": 748,
                                  "name": "ballot",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 630,
                                  "src": "4165:6:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_Ballot_$1513",
                                    "typeString": "contract Ballot"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "arguments": [],
                                  "expression": {
                                    "argumentTypes": [],
                                    "id": 751,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "NewExpression",
                                    "src": "4174:17:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_creation_nonpayable$__$returns$_t_contract$_GeneralBallot_$1696_$",
                                      "typeString": "function () returns (contract GeneralBallot)"
                                    },
                                    "typeName": {
                                      "id": 750,
                                      "nodeType": "UserDefinedTypeName",
                                      "pathNode": {
                                        "id": 749,
                                        "name": "GeneralBallot",
                                        "nodeType": "IdentifierPath",
                                        "referencedDeclaration": 1696,
                                        "src": "4178:13:3"
                                      },
                                      "referencedDeclaration": 1696,
                                      "src": "4178:13:3",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_contract$_GeneralBallot_$1696",
                                        "typeString": "contract GeneralBallot"
                                      }
                                    }
                                  },
                                  "id": 752,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "4174:19:3",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_GeneralBallot_$1696",
                                    "typeString": "contract GeneralBallot"
                                  }
                                },
                                "src": "4165:28:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_Ballot_$1513",
                                  "typeString": "contract Ballot"
                                }
                              },
                              "id": 754,
                              "nodeType": "ExpressionStatement",
                              "src": "4165:28:3"
                            }
                          ]
                        },
                        "id": 756,
                        "nodeType": "IfStatement",
                        "src": "4036:168:3",
                        "trueBody": {
                          "id": 747,
                          "nodeType": "Block",
                          "src": "4058:51:3",
                          "statements": [
                            {
                              "expression": {
                                "id": 745,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "id": 740,
                                  "name": "ballot",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 630,
                                  "src": "4072:6:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_Ballot_$1513",
                                    "typeString": "contract Ballot"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "arguments": [],
                                  "expression": {
                                    "argumentTypes": [],
                                    "id": 743,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "NewExpression",
                                    "src": "4081:15:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_creation_nonpayable$__$returns$_t_contract$_BordaBallot_$1618_$",
                                      "typeString": "function () returns (contract BordaBallot)"
                                    },
                                    "typeName": {
                                      "id": 742,
                                      "nodeType": "UserDefinedTypeName",
                                      "pathNode": {
                                        "id": 741,
                                        "name": "BordaBallot",
                                        "nodeType": "IdentifierPath",
                                        "referencedDeclaration": 1618,
                                        "src": "4085:11:3"
                                      },
                                      "referencedDeclaration": 1618,
                                      "src": "4085:11:3",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_contract$_BordaBallot_$1618",
                                        "typeString": "contract BordaBallot"
                                      }
                                    }
                                  },
                                  "id": 744,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "4081:17:3",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_BordaBallot_$1618",
                                    "typeString": "contract BordaBallot"
                                  }
                                },
                                "src": "4072:26:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_Ballot_$1513",
                                  "typeString": "contract Ballot"
                                }
                              },
                              "id": 746,
                              "nodeType": "ExpressionStatement",
                              "src": "4072:26:3"
                            }
                          ]
                        }
                      },
                      "id": 757,
                      "nodeType": "IfStatement",
                      "src": "3946:258:3",
                      "trueBody": {
                        "id": 736,
                        "nodeType": "Block",
                        "src": "3968:54:3",
                        "statements": []
                      }
                    },
                    "id": 758,
                    "nodeType": "IfStatement",
                    "src": "3854:350:3",
                    "trueBody": {
                      "id": 732,
                      "nodeType": "Block",
                      "src": "3876:56:3",
                      "statements": [
                        {
                          "expression": {
                            "id": 730,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftHandSide": {
                              "id": 725,
                              "name": "ballot",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 630,
                              "src": "3890:6:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_Ballot_$1513",
                                "typeString": "contract Ballot"
                              }
                            },
                            "nodeType": "Assignment",
                            "operator": "=",
                            "rightHandSide": {
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "id": 728,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "NewExpression",
                                "src": "3899:20:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_creation_nonpayable$__$returns$_t_contract$_PreferenceBallot_$1834_$",
                                  "typeString": "function () returns (contract PreferenceBallot)"
                                },
                                "typeName": {
                                  "id": 727,
                                  "nodeType": "UserDefinedTypeName",
                                  "pathNode": {
                                    "id": 726,
                                    "name": "PreferenceBallot",
                                    "nodeType": "IdentifierPath",
                                    "referencedDeclaration": 1834,
                                    "src": "3903:16:3"
                                  },
                                  "referencedDeclaration": 1834,
                                  "src": "3903:16:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_PreferenceBallot_$1834",
                                    "typeString": "contract PreferenceBallot"
                                  }
                                }
                              },
                              "id": 729,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "3899:22:3",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_PreferenceBallot_$1834",
                                "typeString": "contract PreferenceBallot"
                              }
                            },
                            "src": "3890:31:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Ballot_$1513",
                              "typeString": "contract Ballot"
                            }
                          },
                          "id": 731,
                          "nodeType": "ExpressionStatement",
                          "src": "3890:31:3"
                        }
                      ]
                    }
                  },
                  "id": 759,
                  "nodeType": "IfStatement",
                  "src": "3765:439:3",
                  "trueBody": {
                    "id": 721,
                    "nodeType": "Block",
                    "src": "3787:53:3",
                    "statements": [
                      {
                        "expression": {
                          "id": 719,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 714,
                            "name": "ballot",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 630,
                            "src": "3801:6:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Ballot_$1513",
                              "typeString": "contract Ballot"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 717,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "NewExpression",
                              "src": "3810:17:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_creation_nonpayable$__$returns$_t_contract$_GeneralBallot_$1696_$",
                                "typeString": "function () returns (contract GeneralBallot)"
                              },
                              "typeName": {
                                "id": 716,
                                "nodeType": "UserDefinedTypeName",
                                "pathNode": {
                                  "id": 715,
                                  "name": "GeneralBallot",
                                  "nodeType": "IdentifierPath",
                                  "referencedDeclaration": 1696,
                                  "src": "3814:13:3"
                                },
                                "referencedDeclaration": 1696,
                                "src": "3814:13:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_GeneralBallot_$1696",
                                  "typeString": "contract GeneralBallot"
                                }
                              }
                            },
                            "id": 718,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3810:19:3",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_GeneralBallot_$1696",
                              "typeString": "contract GeneralBallot"
                            }
                          },
                          "src": "3801:28:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_Ballot_$1513",
                            "typeString": "contract Ballot"
                          }
                        },
                        "id": 720,
                        "nodeType": "ExpressionStatement",
                        "src": "3801:28:3"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "id": 760,
                    "name": "ballot",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 630,
                    "src": "4221:6:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Ballot_$1513",
                      "typeString": "contract Ballot"
                    }
                  },
                  "functionReturnParameters": 710,
                  "id": 761,
                  "nodeType": "Return",
                  "src": "4214:13:3"
                }
              ]
            },
            "id": 763,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getBallot",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 706,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 705,
                  "mutability": "mutable",
                  "name": "_ballotType",
                  "nodeType": "VariableDeclaration",
                  "scope": 763,
                  "src": "3541:16:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 704,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "3541:4:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3540:18:3"
            },
            "returnParameters": {
              "id": 710,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 709,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 763,
                  "src": "3576:6:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_Ballot_$1513",
                    "typeString": "contract Ballot"
                  },
                  "typeName": {
                    "id": 708,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 707,
                      "name": "Ballot",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 1513,
                      "src": "3576:6:3"
                    },
                    "referencedDeclaration": 1513,
                    "src": "3576:6:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Ballot_$1513",
                      "typeString": "contract Ballot"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3575:8:3"
            },
            "scope": 886,
            "src": "3522:712:3",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 815,
              "nodeType": "Block",
              "src": "4350:646:3",
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 775,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 773,
                      "name": "_ballotType",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 765,
                      "src": "4389:11:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "hexValue": "31",
                      "id": 774,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "4404:1:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "src": "4389:16:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "condition": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 783,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 781,
                        "name": "_ballotType",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 765,
                        "src": "4527:11:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "hexValue": "32",
                        "id": 782,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4542:1:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_2_by_1",
                          "typeString": "int_const 2"
                        },
                        "value": "2"
                      },
                      "src": "4527:16:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "falseBody": {
                      "condition": {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 791,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 789,
                          "name": "_ballotType",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 765,
                          "src": "4663:11:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "33",
                          "id": 790,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4678:1:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_3_by_1",
                            "typeString": "int_const 3"
                          },
                          "value": "3"
                        },
                        "src": "4663:16:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "falseBody": {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 799,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 797,
                            "name": "_ballotType",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 765,
                            "src": "4771:11:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "hexValue": "34",
                            "id": 798,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "4786:1:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_4_by_1",
                              "typeString": "int_const 4"
                            },
                            "value": "4"
                          },
                          "src": "4771:16:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": {
                          "id": 808,
                          "nodeType": "Block",
                          "src": "4882:74:3",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "id": 805,
                                    "name": "_resultCalculatorType",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 767,
                                    "src": "4923:21:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "id": 804,
                                  "name": "getGeneralResultCalculator",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 853,
                                  "src": "4896:26:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
                                    "typeString": "function (uint256)"
                                  }
                                },
                                "id": 806,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "4896:49:3",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 807,
                              "nodeType": "ExpressionStatement",
                              "src": "4896:49:3"
                            }
                          ]
                        },
                        "id": 809,
                        "nodeType": "IfStatement",
                        "src": "4767:189:3",
                        "trueBody": {
                          "id": 803,
                          "nodeType": "Block",
                          "src": "4789:51:3",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [],
                                "expression": {
                                  "argumentTypes": [],
                                  "id": 800,
                                  "name": "getBordaResultCalculator",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 827,
                                  "src": "4803:24:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                                    "typeString": "function ()"
                                  }
                                },
                                "id": 801,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "4803:26:3",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 802,
                              "nodeType": "ExpressionStatement",
                              "src": "4803:26:3"
                            }
                          ]
                        }
                      },
                      "id": 810,
                      "nodeType": "IfStatement",
                      "src": "4659:297:3",
                      "trueBody": {
                        "id": 796,
                        "nodeType": "Block",
                        "src": "4681:72:3",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "id": 793,
                                  "name": "_resultCalculatorType",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 767,
                                  "src": "4720:21:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "id": 792,
                                "name": "getScoreResultCalculator",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 885,
                                "src": "4695:24:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
                                  "typeString": "function (uint256)"
                                }
                              },
                              "id": 794,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "4695:47:3",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_tuple$__$",
                                "typeString": "tuple()"
                              }
                            },
                            "id": 795,
                            "nodeType": "ExpressionStatement",
                            "src": "4695:47:3"
                          }
                        ]
                      }
                    },
                    "id": 811,
                    "nodeType": "IfStatement",
                    "src": "4523:433:3",
                    "trueBody": {
                      "id": 788,
                      "nodeType": "Block",
                      "src": "4545:77:3",
                      "statements": [
                        {
                          "expression": {
                            "arguments": [
                              {
                                "id": 785,
                                "name": "_resultCalculatorType",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 767,
                                "src": "4589:21:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "id": 784,
                              "name": "getPreferenceResultCalculator",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 879,
                              "src": "4559:29:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
                                "typeString": "function (uint256)"
                              }
                            },
                            "id": 786,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "4559:52:3",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$__$",
                              "typeString": "tuple()"
                            }
                          },
                          "id": 787,
                          "nodeType": "ExpressionStatement",
                          "src": "4559:52:3"
                        }
                      ]
                    }
                  },
                  "id": 812,
                  "nodeType": "IfStatement",
                  "src": "4385:571:3",
                  "trueBody": {
                    "id": 780,
                    "nodeType": "Block",
                    "src": "4407:74:3",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 777,
                              "name": "_resultCalculatorType",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 767,
                              "src": "4448:21:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 776,
                            "name": "getGeneralResultCalculator",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 853,
                            "src": "4421:26:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
                              "typeString": "function (uint256)"
                            }
                          },
                          "id": 778,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4421:49:3",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 779,
                        "nodeType": "ExpressionStatement",
                        "src": "4421:49:3"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "id": 813,
                    "name": "resultCalculator",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 633,
                    "src": "4973:16:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ResultCalculator_$2530",
                      "typeString": "contract ResultCalculator"
                    }
                  },
                  "functionReturnParameters": 772,
                  "id": 814,
                  "nodeType": "Return",
                  "src": "4966:23:3"
                }
              ]
            },
            "id": 816,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getResultCalculator",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 768,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 765,
                  "mutability": "mutable",
                  "name": "_ballotType",
                  "nodeType": "VariableDeclaration",
                  "scope": 816,
                  "src": "4269:16:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 764,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "4269:4:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 767,
                  "mutability": "mutable",
                  "name": "_resultCalculatorType",
                  "nodeType": "VariableDeclaration",
                  "scope": 816,
                  "src": "4287:26:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 766,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "4287:4:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4268:46:3"
            },
            "returnParameters": {
              "id": 772,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 771,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 816,
                  "src": "4332:16:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_ResultCalculator_$2530",
                    "typeString": "contract ResultCalculator"
                  },
                  "typeName": {
                    "id": 770,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 769,
                      "name": "ResultCalculator",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 2530,
                      "src": "4332:16:3"
                    },
                    "referencedDeclaration": 2530,
                    "src": "4332:16:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ResultCalculator_$2530",
                      "typeString": "contract ResultCalculator"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4331:18:3"
            },
            "scope": 886,
            "src": "4240:756:3",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 826,
              "nodeType": "Block",
              "src": "5047:62:3",
              "statements": [
                {
                  "expression": {
                    "id": 824,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 819,
                      "name": "resultCalculator",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 633,
                      "src": "5063:16:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ResultCalculator_$2530",
                        "typeString": "contract ResultCalculator"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 822,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "5082:15:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_creation_nonpayable$__$returns$_t_contract$_BordaResult_$2166_$",
                          "typeString": "function () returns (contract BordaResult)"
                        },
                        "typeName": {
                          "id": 821,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 820,
                            "name": "BordaResult",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 2166,
                            "src": "5086:11:3"
                          },
                          "referencedDeclaration": 2166,
                          "src": "5086:11:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_BordaResult_$2166",
                            "typeString": "contract BordaResult"
                          }
                        }
                      },
                      "id": 823,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "5082:17:3",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_BordaResult_$2166",
                        "typeString": "contract BordaResult"
                      }
                    },
                    "src": "5063:36:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ResultCalculator_$2530",
                      "typeString": "contract ResultCalculator"
                    }
                  },
                  "id": 825,
                  "nodeType": "ExpressionStatement",
                  "src": "5063:36:3"
                }
              ]
            },
            "id": 827,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getBordaResultCalculator",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 817,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5035:2:3"
            },
            "returnParameters": {
              "id": 818,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5047:0:3"
            },
            "scope": 886,
            "src": "5002:107:3",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 852,
              "nodeType": "Block",
              "src": "5237:252:3",
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 834,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 832,
                      "name": "_generalResultCalculatorType",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 829,
                      "src": "5251:28:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "hexValue": "31",
                      "id": 833,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "5283:1:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "src": "5251:33:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 850,
                    "nodeType": "Block",
                    "src": "5419:64:3",
                    "statements": [
                      {
                        "expression": {
                          "id": 848,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 843,
                            "name": "resultCalculator",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 633,
                            "src": "5433:16:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ResultCalculator_$2530",
                              "typeString": "contract ResultCalculator"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 846,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "NewExpression",
                              "src": "5452:18:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_creation_nonpayable$__$returns$_t_contract$_GeneralResults_$2307_$",
                                "typeString": "function () returns (contract GeneralResults)"
                              },
                              "typeName": {
                                "id": 845,
                                "nodeType": "UserDefinedTypeName",
                                "pathNode": {
                                  "id": 844,
                                  "name": "GeneralResults",
                                  "nodeType": "IdentifierPath",
                                  "referencedDeclaration": 2307,
                                  "src": "5456:14:3"
                                },
                                "referencedDeclaration": 2307,
                                "src": "5456:14:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_GeneralResults_$2307",
                                  "typeString": "contract GeneralResults"
                                }
                              }
                            },
                            "id": 847,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "5452:20:3",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_GeneralResults_$2307",
                              "typeString": "contract GeneralResults"
                            }
                          },
                          "src": "5433:39:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ResultCalculator_$2530",
                            "typeString": "contract ResultCalculator"
                          }
                        },
                        "id": 849,
                        "nodeType": "ExpressionStatement",
                        "src": "5433:39:3"
                      }
                    ]
                  },
                  "id": 851,
                  "nodeType": "IfStatement",
                  "src": "5247:236:3",
                  "trueBody": {
                    "id": 842,
                    "nodeType": "Block",
                    "src": "5286:64:3",
                    "statements": [
                      {
                        "expression": {
                          "id": 840,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 835,
                            "name": "resultCalculator",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 633,
                            "src": "5300:16:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ResultCalculator_$2530",
                              "typeString": "contract ResultCalculator"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 838,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "NewExpression",
                              "src": "5319:18:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_creation_nonpayable$__$returns$_t_contract$_GeneralResults_$2307_$",
                                "typeString": "function () returns (contract GeneralResults)"
                              },
                              "typeName": {
                                "id": 837,
                                "nodeType": "UserDefinedTypeName",
                                "pathNode": {
                                  "id": 836,
                                  "name": "GeneralResults",
                                  "nodeType": "IdentifierPath",
                                  "referencedDeclaration": 2307,
                                  "src": "5323:14:3"
                                },
                                "referencedDeclaration": 2307,
                                "src": "5323:14:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_GeneralResults_$2307",
                                  "typeString": "contract GeneralResults"
                                }
                              }
                            },
                            "id": 839,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "5319:20:3",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_GeneralResults_$2307",
                              "typeString": "contract GeneralResults"
                            }
                          },
                          "src": "5300:39:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ResultCalculator_$2530",
                            "typeString": "contract ResultCalculator"
                          }
                        },
                        "id": 841,
                        "nodeType": "ExpressionStatement",
                        "src": "5300:39:3"
                      }
                    ]
                  }
                }
              ]
            },
            "id": 853,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getGeneralResultCalculator",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 830,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 829,
                  "mutability": "mutable",
                  "name": "_generalResultCalculatorType",
                  "nodeType": "VariableDeclaration",
                  "scope": 853,
                  "src": "5193:33:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 828,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "5193:4:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5192:35:3"
            },
            "returnParameters": {
              "id": 831,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5237:0:3"
            },
            "scope": 886,
            "src": "5157:332:3",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 878,
              "nodeType": "Block",
              "src": "5626:246:3",
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 860,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 858,
                      "name": "_preferenceResultCalculatorType",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 855,
                      "src": "5640:31:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "hexValue": "31",
                      "id": 859,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "5675:1:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "src": "5640:36:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 876,
                    "nodeType": "Block",
                    "src": "5808:58:3",
                    "statements": [
                      {
                        "expression": {
                          "id": 874,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 869,
                            "name": "resultCalculator",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 633,
                            "src": "5822:16:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ResultCalculator_$2530",
                              "typeString": "contract ResultCalculator"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 872,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "NewExpression",
                              "src": "5841:12:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_creation_nonpayable$__$returns$_t_contract$_Oklahoma_$2515_$",
                                "typeString": "function () returns (contract Oklahoma)"
                              },
                              "typeName": {
                                "id": 871,
                                "nodeType": "UserDefinedTypeName",
                                "pathNode": {
                                  "id": 870,
                                  "name": "Oklahoma",
                                  "nodeType": "IdentifierPath",
                                  "referencedDeclaration": 2515,
                                  "src": "5845:8:3"
                                },
                                "referencedDeclaration": 2515,
                                "src": "5845:8:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_Oklahoma_$2515",
                                  "typeString": "contract Oklahoma"
                                }
                              }
                            },
                            "id": 873,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "5841:14:3",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Oklahoma_$2515",
                              "typeString": "contract Oklahoma"
                            }
                          },
                          "src": "5822:33:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ResultCalculator_$2530",
                            "typeString": "contract ResultCalculator"
                          }
                        },
                        "id": 875,
                        "nodeType": "ExpressionStatement",
                        "src": "5822:33:3"
                      }
                    ]
                  },
                  "id": 877,
                  "nodeType": "IfStatement",
                  "src": "5636:230:3",
                  "trueBody": {
                    "id": 868,
                    "nodeType": "Block",
                    "src": "5678:58:3",
                    "statements": [
                      {
                        "expression": {
                          "id": 866,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 861,
                            "name": "resultCalculator",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 633,
                            "src": "5692:16:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ResultCalculator_$2530",
                              "typeString": "contract ResultCalculator"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 864,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "NewExpression",
                              "src": "5711:12:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_creation_nonpayable$__$returns$_t_contract$_Oklahoma_$2515_$",
                                "typeString": "function () returns (contract Oklahoma)"
                              },
                              "typeName": {
                                "id": 863,
                                "nodeType": "UserDefinedTypeName",
                                "pathNode": {
                                  "id": 862,
                                  "name": "Oklahoma",
                                  "nodeType": "IdentifierPath",
                                  "referencedDeclaration": 2515,
                                  "src": "5715:8:3"
                                },
                                "referencedDeclaration": 2515,
                                "src": "5715:8:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_Oklahoma_$2515",
                                  "typeString": "contract Oklahoma"
                                }
                              }
                            },
                            "id": 865,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "5711:14:3",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Oklahoma_$2515",
                              "typeString": "contract Oklahoma"
                            }
                          },
                          "src": "5692:33:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ResultCalculator_$2530",
                            "typeString": "contract ResultCalculator"
                          }
                        },
                        "id": 867,
                        "nodeType": "ExpressionStatement",
                        "src": "5692:33:3"
                      }
                    ]
                  }
                }
              ]
            },
            "id": 879,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getPreferenceResultCalculator",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 856,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 855,
                  "mutability": "mutable",
                  "name": "_preferenceResultCalculatorType",
                  "nodeType": "VariableDeclaration",
                  "scope": 879,
                  "src": "5579:36:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 854,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "5579:4:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5578:38:3"
            },
            "returnParameters": {
              "id": 857,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5626:0:3"
            },
            "scope": 886,
            "src": "5540:332:3",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 884,
              "nodeType": "Block",
              "src": "5994:265:3",
              "statements": []
            },
            "id": 885,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getScoreResultCalculator",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 882,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 881,
                  "mutability": "mutable",
                  "name": "_scoreResultCalculatorType",
                  "nodeType": "VariableDeclaration",
                  "scope": 885,
                  "src": "5952:31:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 880,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "5952:4:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5951:33:3"
            },
            "returnParameters": {
              "id": 883,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5994:0:3"
            },
            "scope": 886,
            "src": "5918:341:3",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          }
        ],
        "scope": 887,
        "src": "554:5743:3"
      }
    ],
    "src": "39:6258:3"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.0+commit.c7dfd78e.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.4.12",
  "updatedAt": "2023-03-29T13:24:49.434Z",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  }
}